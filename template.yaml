---
# Source: swagger/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: develop
  name: swagger
  labels:     
    app: "swagger"
    release: "swagger"
    heritage: "Helm"
    chart: "swagger-0.1.13"
spec:
  selector:
        
    app: "swagger"
    release: "swagger"
  type: NodePort
  ports:
  - name: swagger
    port: 8080
    targetPort: 8080
    protocol: TCP
---
# Source: swagger/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: develop
  name: swagger
  labels:     
    app: "swagger"
    release: "swagger"
    heritage: "Helm"
    chart: "swagger-0.1.13"
spec:
  replicas: 1
  selector:
    matchLabels:       
      app: "swagger"
      release: "swagger"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:         
        app: "swagger"
        release: "swagger"
        heritage: "Helm"
        chart: "swagger-0.1.13"
    spec:
      containers:
      - name: swagger
        image: "gcr.io/sstar-sw-backend-dev/gitlab.com/sstar/sw-swagger:v1.2.10-921"
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 256Mi
        env:
        - name: SWAGGER_JSON
          value: "/app/sw.swagger.json"
        - name: API_HOST
          value: "api.dev.sw.sensestar.live"
        - name: PORT
          value: "8080"
        ports:
        - name: swagger
          containerPort: 8080
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10

---
# Source: sw-api/templates/credential/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cloudsql-credential
  namespace: develop
type: Opaque
data:
  "sstar-develop-cloudsql-credential.json": ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAic3N0YXItc3ctYmFja2VuZC1kZXYiLAogICJwcml2YXRlX2tleV9pZCI6ICI3NjIyZWQ1ZmUzZTNiNzNiM2Q2NDg4MjI4MWVhMDkwODY4YTU3OTA2IiwKICAicHJpdmF0ZV9rZXkiOiAiLS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tXG5NSUlFdlFJQkFEQU5CZ2txaGtpRzl3MEJBUUVGQUFTQ0JLY3dnZ1NqQWdFQUFvSUJBUUNjNG1jb3FhT0VxV2Y0XG5SRjJyT051bDFqajRsU2Z1SEhPWWluTFE0YmtWYmlvNWdjc2F5T0FZN0ZMc1VVa1hXTUQ5dEtuNUJ1Q3RBdXIxXG5CVEV1c3F6K24zbHJHRDJGUmhuTFFiY3lqNkZNNWg1VnFRN2FpYnI3VU4rZ2hYNlB1R2V6WGkxZ1ppTzVWcHI4XG5kQlcwSks3YmtsUit0R1ZqcEFScXpkZmZxb2ZhZC81TFBYR2YvTGpuK0xPc1F5UXFIdWZuVWcwenZaUDFCbEtYXG5KWWtRT2llQWJraU14dUxLLzdrZWgzcmxrS1ZRRW9VSmlobGJRSUdyMldGMXJoUmtKZDRUZUxkb3pUa1dVMUdJXG5mQXhWcnExS1cvRTZoaENCc0pwbEw5Q3ZadjhjbXdFMjNlNUs2SkFXelErZ3dEVE0wVDFpR1hjNXJxeXB0Zk14XG5BWXJDRjlJVkFnTUJBQUVDZ2dFQUoxZ0IvZWtaR0haeG5BbnRJYmtISUo1S09GRVRxL3ZYbzR3cEFpaHhoYVhVXG5rZ3B5V0p2QzA0MUV1SDRrSWVaQXMvK0FWdkw2R25sdVdoYzh2OVRRWEtTNnl2aFB5V0lNcXZRbWtOZ0RZQ2tmXG50MlRIMUZlUkhHQ3FUSFBlQ3dYNGY3dWhEcGxlNFNhT2hMeEtDeHpkK3pQRjIrYTZ2SlBRQmNic21ldUcyV3MwXG5pZEg0c3liVFF5aXhVRUdJeWxJdDhUYVRIQnZTOGJQSmdrTU9WaEt4VHNTeUhjUDlMbFdsb2VoWGhaMVZ3eXI3XG5OMjhEOWFsWU9xT09xK015czR4YkVLT1BrNGRyZjV0RC9maGpjSUxsQmZvZ3BuaWlEaEJ0REJPcUd2TDBsckVZXG5TLzNOQm96Y2tjM2ZRRGJtWlNlQzVtbThnTUR4VHRZNWgrR0l0NC8vMndLQmdRRFdyTWRDRVpMc2Z5d1VPVnM1XG5reUVXY0FVNW13VHJEQVMrR1paNXNSK3U4TElQWGtsOW5Ma0xzYWZ6Y0tpb2NsR1I0aVgyVHlCeUE5RWRqd0lXXG4vYjlCOXpEQ1pyZ3dDYVJNMk1kNWsrN01HclQ3SjFGWXo2MWFzZGxtSG5qSUtscllxUW1nK3ZWWnNhR2ZoUGhQXG5jOWNLN0VjYldPL05hbkpKNEN4a3gwUFdhd0tCZ1FDN0ZiSXpMd0I1Z1pMZUNML3lrU2Fqa0twWkRKbXRvUnFEXG5sUGYya0l5Uk9nc3FIc09nNFBHWUJlQ0M4clZVSDRjTU5aSE11dUE1ZG5VREp2N0FjbmFzdXUzS3M4UVNGMDFxXG4xSkZqYmp1L1gxLzBzK3BEZ0xqOUF2MTVhSWg2cVN3Nm91N3QwV09CamdiTFgvNW5ER1F5OGJ3YUg3SnZBblowXG4rSWZ4dG9BWmZ3S0JnRGlXK3ovVFdpTzFzbXp5WWJYZnJ3MDNJbWw1RCtiV0dEbjBqTkl2ZXVhbTFJbHdsWGJqXG5aWFJMdExaYnNGb1hLS0dJTi9HaUVpOThDaGY4cHRSZ3Q1WXdEMDV2dllZTVJKOXRWY2dhMHd4Q3pncVc1cjYrXG5vRGdVUWZiRmVabHFjT0JFVHlGOGhraktwb3hpaFFLTXl0YzZTZFJQc1ljNDFEL2RORmFzb0psWkFvR0FUNUNLXG5tUG9FV2FpaHJZeExGZjVsVUdyV0I4azBFb1BSb3VSWUVLU3BJNXByNVIzd1ZSdFZwREhicWRWUENOZmZ0M0dRXG44R0VKdTJhRm5UR1lab0JIdUc1SGMwM0F0WER6bTl1TGVaNElDdnVrODQwUXRHU3FSL0JkbktTNFpuSk1QU1BPXG5PWll6bTRXcm5oTFZQejRsM3dTdjJ1eGdGcFlWaXVtbjUwU1dka0VDZ1lFQTFuM1JSY3pxdEw0aURXODFIVERHXG5xNWYvcDc3WmdKZk9MMHRGVmc1T28rMGcwcWZURTZGM0p2TEx4VndPSGkxdzhQemNwcGJyb1V3WDN5VDhTa0pQXG5MUFZyL3dCT0RtQUFkeEt3bHZRejVqSUhZMnlmQ3huY2p0MzhSbmh2QmtPNUpocnZFUFc4NExzdEU2RkJjZWZVXG5XakczeXVJZlNTeHhrQVVVQTdVVGtnUT1cbi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS1cbiIsCiAgImNsaWVudF9lbWFpbCI6ICJjbG91ZHNxbC1yd0Bzc3Rhci1zdy1iYWNrZW5kLWRldi5pYW0uZ3NlcnZpY2VhY2NvdW50LmNvbSIsCiAgImNsaWVudF9pZCI6ICIxMDg2MTMyNDkxNDI1NzA0MDg1MTIiLAogICJhdXRoX3VyaSI6ICJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvYXV0aCIsCiAgInRva2VuX3VyaSI6ICJodHRwczovL29hdXRoMi5nb29nbGVhcGlzLmNvbS90b2tlbiIsCiAgImF1dGhfcHJvdmlkZXJfeDUwOV9jZXJ0X3VybCI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9vYXV0aDIvdjEvY2VydHMiLAogICJjbGllbnRfeDUwOV9jZXJ0X3VybCI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9yb2JvdC92MS9tZXRhZGF0YS94NTA5L2Nsb3Vkc3FsLXJ3JTQwc3N0YXItc3ctYmFja2VuZC1kZXYuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iCn0K
---
# Source: sw-api/templates/credential/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: firebase-credential
  namespace: develop
type: Opaque
data:
  "sstar-develop-firebase-credential.json": ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAic3N0YXItbWVyLWNsaWVudHMtZGV2IiwKICAicHJpdmF0ZV9rZXlfaWQiOiAiZTRmNzIyZDVmZWFjZDFkNWQ1OTBjYzJjNDM3OGJlYmMwZGE5YjZmYSIsCiAgInByaXZhdGVfa2V5IjogIi0tLS0tQkVHSU4gUFJJVkFURSBLRVktLS0tLVxuTUlJRXZRSUJBREFOQmdrcWhraUc5dzBCQVFFRkFBU0NCS2N3Z2dTakFnRUFBb0lCQVFDWUVsRGkvbllsOUJMWlxuNld4cG0yTmZublRGMnRENGdvc2xZMU0vd01JVU5HNWt5akhKRTVOV2xla3cxdWRZTUIvRStRQTVZM1pONVZxTlxua2Y3OGxNUGhUaXB6ZDJhOEFNV2xpUzh0clNnbU5zY0VuSXloU2cxMm5wcE9BY2NlU3FOeUUrczRxeklLN1pUdFxuMmYxNEF6Tk1QWjZmdFlpV1VJT0lER2EwdnJ1OHdDNkZXRnRTZ2lQVHRab2J4WjBMWGk2ZTc1eXRMNklLendFUlxubzU5dmY2V0JSaXhlamlWenFhU3FDSVY3OXFTN2VVenRKcVU4eDJRSGVLYnRadldQcTNYWlRUbEpQZmthdkdhRVxuazBHajAyVmlVbEk0YktZdEdSRmtXbGNTbk9wK1ZwWGt1YU55RGNSOXBGUTlWMmZoVStLcHE4RlBnQ3V2ckd1Y1xuOXl5d29yMDFBZ01CQUFFQ2dnRUFBaEVzVmZibExwS09RbUJlRDdqRDFZbG5CMGQ0VkFzYmpzTUx0SHFreUxjeFxuRVovK3BEL21zL25FQlRJWlMvQVUyODI4cklzSEVTWlVkWnlEUXZZQ0RFa2o0aitWdnhRaThQaVg1NzdmcEZhclxuUnVDYWpXNEp3bnFEdzNBRkZRclRyNW5JdHBPbWZGS0t3SW1ZTWU1Q2loU1pBdUpwL0dKcUgwcDMzTzRZeVljdFxuTDBpMlUvR0YwQXJEckdHR3JyOFg4NGgzOGJLbGo2M1dvU2xqRVFpdFh0dURQLy9YSlJNZitLT3EvU2hvT3pYQ1xuZDFPdzJncUxyNE1JM1hzdmg1TVVScmFaYThBUHd4TVBXYWFralc0V1dzZU9iWGZ4Y0FKNUVybHB0MmZLT2pPd1xuNTlhUGl2OEtMaFJsNmZuVEtucmI3L0NqclRVSVN1dU1rME8rTkU3OXd3S0JnUURVRFZWMWNuNXF5c2VmQmxuRVxud0ljSFBLVk14dGhzcEVjZTd0c09qRFMxTjlBVVB2Zkd0RWEwZnNUb2FjN052a3VBTmZGU1lNaTlMeSt0VWJuMVxuQUJNSUM5NS9td2cxSk1CeFpZR0JERHBpV0FaNllsRXZXbWVIeUp1cWl5ZllwTWZmd2FxditNZG9TRlE4WlI3ZFxudXN4ZkJCcVJaL1ovZHYyNU5RZnBvMWpnTXdLQmdRQzNscVZmMGNqaHVpcnYrbVlnaVNzbk5EQ3gySGtMUVQvT1xuNGNqdWN6SWJ4QThLYkFDUGJ2MFpoYjhBc2ZiSGIvQkFaOWxEL2ppdStIU01FVEl5R3dqNlNubVBHTlJ3V0RoNFxuaUgwZmM2TFlLaE9OK1luOFJjKzhVaFlCQlVhM2haS2JwSHNoOXJCTk93bXdZUld0MXpVb2d3K0FVUll5aUlWMVxuM3o3MzcvZms5d0tCZ1FDYWJRZHlXNm9pdllBNG1GaGhoOUFOL2lWblQxd25hazk5QUhlNUZYUUJFUjlRenphRVxubDU3eUxXdmEwY3RRWENnQnU4Yjl0Z3dhY2pXblkrQW53eUVZK0FQV0xDSURDYnU0R1RNQnR0VUI3NWJ3STQ5NlxuQzcxZnprRkhKc1lpNklYQ3R2aEY1TWZiY3VrZGZvckc4UldLa0tPRWh4Q2xiUk9EZ0ZJOTNMNkpyd0tCZ0ZMd1xuSEovUUgwZFNtbWsxbndPZDFEL3V4UHpqUmJPKzgzdWI1dkZLVzEzTjBkbXNkd2hWWk1RdDl0N3lod0VNWWVaR1xueEJHQ2ZNc1c5VmY5d01hQURpczhqL1FFakp5QVRtcXRocEU1NVZ4d2pjcjY2OHBySTNENVNIV0hrNjMvQ3YrRFxuYkJrbzMvYlQ4QW1kb25TWm42dEFvalVlN0w5Qmk4RjNiSFFJRmQ1N0FvR0FONXFpVzU4eStodkNxY2doT2NpbFxuTTd4d3FtS2NkNlhOTlFINWxsWVhINWFPWnBjV2dLMytVMmVGZ0dXZ0hlMENMVWw3TSs4bm9abHRpaWhYdzR5ZlxudkVyMDVBZkF4QllOZlRGbXJsVGxoVFZwREl6UGlGaVBWYlAwZXNYbktPV2d4V1ZucDNJMU9pb1Nyc0N6UEozRFxuelFNeDRIVm5NcWZnMzhiZVdyc3BWWms9XG4tLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tXG4iLAogICJjbGllbnRfZW1haWwiOiAiZmlyZWJhc2UtYWRtaW5zZGstem0zcGtAc3N0YXItbWVyLWNsaWVudHMtZGV2LmlhbS5nc2VydmljZWFjY291bnQuY29tIiwKICAiY2xpZW50X2lkIjogIjEwMjkxMDI3NjMyNjU0OTUwNjM4MCIsCiAgImF1dGhfdXJpIjogImh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbS9vL29hdXRoMi9hdXRoIiwKICAidG9rZW5fdXJpIjogImh0dHBzOi8vb2F1dGgyLmdvb2dsZWFwaXMuY29tL3Rva2VuIiwKICAiYXV0aF9wcm92aWRlcl94NTA5X2NlcnRfdXJsIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL29hdXRoMi92MS9jZXJ0cyIsCiAgImNsaWVudF94NTA5X2NlcnRfdXJsIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL3JvYm90L3YxL21ldGFkYXRhL3g1MDkvZmlyZWJhc2UtYWRtaW5zZGstem0zcGslNDBzc3Rhci1tZXItY2xpZW50cy1kZXYuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iCn0=
---
# Source: sw-api/templates/credential/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: gcsfuse-credential
  namespace: develop
type: Opaque
data:
  "sstar-develop-gcsfuse-credential.json": ewogICAgInR5cGUiOiAic2VydmljZV9hY2NvdW50IiwKICAgICJwcm9qZWN0X2lkIjogInNzdGFyLXN3LWJhY2tlbmQtZGV2IiwKICAgICJwcml2YXRlX2tleV9pZCI6ICIzODVkZTBkZjY2OGNkYzVhMmM0YjMxZWJlYWM1YWRjMTZjOTNkMmJiIiwKICAgICJwcml2YXRlX2tleSI6ICItLS0tLUJFR0lOIFBSSVZBVEUgS0VZLS0tLS1cbk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRREdORkY5V1ZSMGkwOUVcblVhNlVmOUJpelVwUGdWcndBdFlHSWtjYUFwL1BRUzZLbG5TUEVGR0hKY0JjQkJjK09vdHpJdjFSVVRocDloWDJcbldWRTdJNS9sbFk2S0xTcXJKWms0LzgvV0VPendLZWJoZU9laDFvelF2dW9nK1ZJNkNNOFlaQlNtbEtWaEtzY3VcblRWMktKR0M4eXUxaDVrbnU4WHJ1MEFSWERpM3lhcVAyaklBMnR6RzBoSTY5QmdzZDVLVkV0Y09KdjhVcGwwL1RcbjNlOXk4ODdHeWtOK3pVSFpDV1A0RElRU1ZqdmdZRG1HTTN6NzduYXJraDh1bkV0dzdtd2xFUGxhbGRvTGhQbWdcbjBSLzd5cm4yMk1qMlByYWh2Uy9UWjFZMGpaV3JzU01mNzFyKzhReFFtcGNnWGthTW9uVk5yTG5RcHZ2bi9XMDlcbndtZ2hjY2VKQWdNQkFBRUNnZ0VBQm43dnRrWGJsNXU2dC9TYzNnTlAzVE1ZOXNEWXJnSEx5YVR0TTJBblpHdWdcbmxyeHVXc040Um8rQlRjcTVCOG96cUl6NnBDUC9MekxZWHF2bjlvSVpBeFZiRi9KNXdlVHdMLzdyVFByZVJ4TTZcbmZNU0JnK3QwRDBIWWlzYmREK2Vhd1BRRHZMOWxxYWoxSVBKNmFMVC9RaVM4OGE3U1dMMUxrQURiaVk1ZWlXR3dcblJBR1dBdXJHNFlyU0tlbDV1TU15RU0xK3IzSGxick5MajJaNnFFMER3L2JhSVFxY29mQ25xMGJaSCtpRzkyMVZcbmtxZUFIQy80UHpaVGRqZWRiT3lYaEhqUlZqYnJpRk52d0FnelBLWGNjZmExc3JnRFQ5WUJaWEw2aEFjUGlqVzJcbnYwckFFZXg1bWRoY3VQM2lSRStGV3prV1ozUHZSQVpBbVlzdWNWT3FVUUtCZ1FEM2tQVWJjOGZoNVZSTmJad3FcbnBLRkk2cndZa0FYQTkwRFNVcVF3RDNoMWtZT3NJYzJEZEVBb0RjT3NST1EyLzFFeERuNXFuTzVNS2JaRHpXejJcbjRZd09ReVdWQ3d3a2UvNCszL0VQNzNXOTF1WDNVbVU1dGpMb2s5dklXRk1vOGRDb0VibjNWMUdJa0JMd2RDaVdcbjBLVHY2YzQ2d2c1NzZLZCt5a2FqaTdrTk9RS0JnUURNOU45ZHEyQTAyWXh6c3VPSldWaDZPUm9pRFJIcXZSTXBcbnRTQ0lWZFJJeHhLazUxeW8xRmRXV21oL3dIN1U3UzRVMlgzeUg1VldUVW5VMlZUcXZ5V0hSeFd1ZUtnbHFET3Bcblh1VGpOUUlJdkNBWFJOeVpIRzNIbW85TVB5eXgrTHVrVnFGVWYwbWpGd3l2cE9IRE1zVm9rOFk1KzZZeUJoanZcbjgwc2tHUW5jMFFLQmdRQzZCZTEzdEZkRXNjclg1MzRLT095TVd2Mzl3dkxmM2FxU245Q0o0SVlXYWNJMExLNDlcbmtiUEhwUmdjTVNQL0EzaWgwUTlDMHlyb2hndFVCVjlVWDRTYkR1K0ZmK2llM2FEYzQrOUNseCsxQjI2RG1pRS9cbjdWMXhqL0Q5S1FsTDRmQjA2ZVVBSzFlenN2YllRYUJpT3VORTl6Mmt2ejZjOHVReERKTnB2c3JOV1FLQmdIVFlcbnlodEozK0JoZ3F4WGVWZE5vNTZTdlc1YVN6T3J0YWdhaGtDVHhpSHp0SkpsQUxPVDAzTDh1Z1RUUnJ1M3VJVFVcbmRmUTZ3MVhmWEU5SDFCeTgrdlZEdG4yd2RoUjU3M0lKRXE3aUFwWGVRdUZoTmU3b2dVSEJ3UjUwQ2RRdy9URTBcbjNtY2c1bWRmZGJFUmJGQnZ1cEhqWmFpYTZtWXNpYjBLMUhUdy9XbHhBb0dBQnhhVFc2VG5POE4yMU9OUHZSTjRcbjhYWUNONWFOWTgzalhDOVk3cDBnMmR4VXFxVXNYSDczL25sbkdPV3N3Zm5WK1Q5L1h3bGtUazhVTmR0dXNNbEZcblBOUUZ3dCtsbm5QcGozZ1ZRM3QzV2p2N0t4UFRtYVRGOURBM0liK3p1MUZUNktiUE8yZG1udlh3eWcyQWJpeE5cbkdNRGxROER2c0VJSjc3TFZtN2dQcm9BPVxuLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLVxuIiwKICAgICJjbGllbnRfZW1haWwiOiAiZ2NzLXVwbG9hZC1maWxlc0Bzc3Rhci1zdy1iYWNrZW5kLWRldi5pYW0uZ3NlcnZpY2VhY2NvdW50LmNvbSIsCiAgICAiY2xpZW50X2lkIjogIjExNjA0MDY1MTE2NTAxMDkzODczOSIsCiAgICAiYXV0aF91cmkiOiAiaHR0cHM6Ly9hY2NvdW50cy5nb29nbGUuY29tL28vb2F1dGgyL2F1dGgiLAogICAgInRva2VuX3VyaSI6ICJodHRwczovL29hdXRoMi5nb29nbGVhcGlzLmNvbS90b2tlbiIsCiAgICAiYXV0aF9wcm92aWRlcl94NTA5X2NlcnRfdXJsIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL29hdXRoMi92MS9jZXJ0cyIsCiAgICAiY2xpZW50X3g1MDlfY2VydF91cmwiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vcm9ib3QvdjEvbWV0YWRhdGEveDUwOS9nY3MtdXBsb2FkLWZpbGVzJTQwc3N0YXItc3ctYmFja2VuZC1kZXYuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iCn0K
---
# Source: sw-api/templates/credential/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: google-play-billing-credential
  namespace: develop
type: Opaque
data:
  "sstar-develop-google-play-billing-credential.json": ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAiYXBpLTYxNTc0Njk5OTg5NDUxNTUxMjUtNDU0NjExIiwKICAicHJpdmF0ZV9rZXlfaWQiOiAiYjkyODU1ZDdjZjVkZTAwYjBmNmJiZGI2Zjk4ODU5YTcxNzIyY2ZhZSIsCiAgInByaXZhdGVfa2V5IjogIi0tLS0tQkVHSU4gUFJJVkFURSBLRVktLS0tLVxuTUlJRXZBSUJBREFOQmdrcWhraUc5dzBCQVFFRkFBU0NCS1l3Z2dTaUFnRUFBb0lCQVFDb05KTDVhWjFWMFRnY1xuWm8zUWhUbkg0YXpVMVh1VHJGZ2JxeUt0VkpxUW1OTlpwUTdrTnBFWHF4UzRINVlqeVg4N2hEYnRuZW9Ta3NUY1xuUkttUGN3b2ZpejVmcThvWUxQcXJ4SWIyQmplejFjR3MxQUtTcEFwd0tiUjYzNjlmeW5BOXZxTnNEKzVWWmZ3bVxua25yTEpuREFuSlNrSmF2dWFTWWJJOXZaWGNFRGdEYUkwWUFBZFQyVXFMRC9GQ3BYZlMvMmZyRklFTlY4RWtxL1xuc1VTU1lJeC9rSEZzWjNhUU9OQ2tPZ2p2TkRSeHRaNHIyT3ZnRmVRRmZZdHkrc1hJc0c3Y3VtSWVaUGFFTWpNUVxud2dsSkd1RGlQSVRqa1NJc3l6b3hwQVpsQWNQdVgwSkh6RGpOd0QvaXQya0ZNQXZIZHBvTDZvOEdPOHAwQ2psT1xuT2hkUTJXZFZBZ01CQUFFQ2dnRUFDSTZ3TEM4eTJYTUNSZk9lWXcyUmJIbFo1OGxsVEQ4dGk2N1BzMU53RDZEWlxuYzh0QmNERXAwdDN2STcrUStGNGZ4OHZlQXRzUXF3UTdoQWRHNXhlUHNYTjRrZzUxTFhpd1YyZkdycUtQVitvQ1xua2U2R282WTVLbVA4eDI3Zmh3eVBYRWQ1Y2ZNaU5CeGRwb0FNN2prL21EK3B2T3QyWXA2SDJVUDFtSXFSV2hlcFxuSkQ0d2tWaGR1Vkd1QlpoS01MWlMybDcvSzRDb3NKZXVtNlo4cUsxNVk4QzJ0S3lqK1c4Znk0dHVEelVxdExCc1xuUW1nbGdNK2lwc2I3ZUEweE9Sc0JsekhtYTNmV1JxaVpYWjFvMmlYZVBKSTA4Nmx4ekU4ZkNleVk3YXJ6RFVraFxud05GbW1UeWVXWDZtN3p2Wk1IclJFT0w5SUtFMU12bCsyb3RodFV5Wm13S0JnUURWMFVUbkVabHl5SnlKbi9FRlxuZ3hyNVA5dTJSdzF3eWx3S0dWRllZYldxYzJpSi9XQ3cxRHc0dTd5Ynp1MzFJaStzL0pqemZBTElTcGNOd1VVY1xuRjc2a256aXBaejBVUGhqekczM1lidFV1c1hnQmpmRElDYWNYNGRsa3VyRmdVL1Fxa0x5aFpuc0NtTGxwSlZxMlxucFlkWXliTm93MnZyRHNkak8zZnB4VEhwK3dLQmdRREpZN0VpVGRRbHJiTnJrZjVSZ01zN2FGN0I4VzFXQ1F3UVxudHBGeXRkSWdLSlVhTWNSbGtzeU1wWlZ6WDRaQU1SNzFHY1Z5cEZycC91RW1DOW5IcWYyem1aNXFmR1lWUzRWeFxuNW4yUy8rcVVNeEFHY3FIRFNDc2gvUCtpWm1LYmp2QXp0SjRnNjRqSmZyQjAwZjIyWFBDdlJScHg5Uys3MjQxMFxuYXZZcUtvUUM3d0tCZ0hWVXQrWEF2NTdBUFQ0OFdXdDM3VVpYWjM3WDhLVXpObHlJVmg0VXlEYTN5K2JrOXJreVxuVGJXb043Q2NWZklOaDNINnp3ZlZ4a1VZd1ZsWDlFK2RMQTEwSGdpLzBVR1piZUdCOVlYZUUvZmloUUw5VytLNVxuZ1VyV3NZL1g3dHY0VmVWQnRYRXdKbEpmY21jamkycnMzSis1VjAwbTU4SitRcVhPalZmbjBTTWZBb0dBUUpyYVxubUVhZlovYnhOL0Q5eE9lc1NzS1FvMmJ2ekVuYXRRSGNaeEFzK0dRTWNQckdKaytSancwUGhKT0FYZGRrTnZ5dFxuZXJsKzhOSHpLR0ZrMjhpTXVyRHRRUHZuUTYyV2daT1BkVGpqNStiNW5SZnBETng1K2MxUHRLbGp1TU9DQ3hSR1xuSmdscE9EcU1JTzI4bG1QNlVqKzQzQlhyMmpmMGlRUkhNLyt2bWNFQ2dZQkp6MGR4UVNjY3NnQ3dwQTBaN3ByMFxuVGdsdDBFMis1bCtvdmEyaFBpdHhJYjBNVnVJRDIzbzRaVjgyQnpCdVgwZ1R6VGRJeEh2MDh2eDdGN0h6K1lXM1xuM2NPcWd2enhLa25jZEFnT0JIS3ZhT1U1VXFaK0dFTGhSaTQzMGtIVGJtdldZaDhKYUFyTXhONjlIUUxDTFYyU1xuWTFOLzQvOWhYWHV3cmR2a3JnME5Hdz09XG4tLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tXG4iLAogICJjbGllbnRfZW1haWwiOiAic3N0YXItbWVybWFpZC1pbmFwcGJpbGxpbmdAYXBpLTYxNTc0Njk5OTg5NDUxNTUxMjUtNDU0NjExLmlhbS5nc2VydmljZWFjY291bnQuY29tIiwKICAiY2xpZW50X2lkIjogIjExNDYxMDQ1MTkwODc0MjcyNDM1MyIsCiAgImF1dGhfdXJpIjogImh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbS9vL29hdXRoMi9hdXRoIiwKICAidG9rZW5fdXJpIjogImh0dHBzOi8vb2F1dGgyLmdvb2dsZWFwaXMuY29tL3Rva2VuIiwKICAiYXV0aF9wcm92aWRlcl94NTA5X2NlcnRfdXJsIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL29hdXRoMi92MS9jZXJ0cyIsCiAgImNsaWVudF94NTA5X2NlcnRfdXJsIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL3JvYm90L3YxL21ldGFkYXRhL3g1MDkvc3N0YXItbWVybWFpZC1pbmFwcGJpbGxpbmclNDBhcGktNjE1NzQ2OTk5ODk0NTE1NTEyNS00NTQ2MTEuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iCn0=
---
# Source: sw-api/templates/credential/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: wxpay-credential
  namespace: develop
type: Opaque
data:
  "sstar-develop-wxpay-credential.p12": MIIKmgIBAzCCCmQGCSqGSIb3DQEHAaCCClUEggpRMIIKTTCCBM8GCSqGSIb3DQEHBqCCBMAwggS8AgEAMIIEtQYJKoZIhvcNAQcBMBwGCiqGSIb3DQEMAQYwDgQIXbyvAm773+UCAggAgIIEiMS7dF+3J2Gr/HmbPzXnqfxgW0gB/aNA6aDQn5uvTF5CxyX+R0uK3oiR80gpv4Av0SzLz/FUDsmPRgNvEfbJGbL6oOkeNFKuJB64T6o8rgYMnXiMsVZjOHLzsXRSYx5SPfYOzk01532xtPFTlc2RMEVS8SQaiM5rHLRqblnYRFngC+U2aGPBu1KHYdjeJYxihldHoDu1/bgc/AnLlh1mFd1Am0umL9vOYPqOMCB6kAsL6YlzosThnOfGNcjXhOgrEXtPFJhlsodATUlhvd0gnL98aFAwhgKdZUDAwhEoUKF2hcu7+eYx/yOVr6rP/KPzBqznyiM6UjfObuWjXuutVRG5wTPcG9muIymPTJGO+S/xS51aFLtTdLH2AvHJ9MlMJvbyDpdBFBtCShhCQrbKHfvNNFNmsexZ1mK29RR9KzXQZtF6VXRwlpGUy5eo/UQu3FVKkvrZ+lnlvLed4y7nCfbmSqf58tPOwWiOBMdGWEXY/ojDqYrrowWhmdhIcT2eppQAgYxVSVbMIjYMi9e4WAL5KrIV5Z6K/ttxOXt84goCJBn1mtrN+F7RAiaYjQ2fO3fhINZkbuAhCUK4CTW07ctGLTRm4N48/UyfdBPKYipG7mG6LXtQwJ2esRzUIayvTmRdOfcRaSQNFkqtxUdCa/2vkBZhFQ8wDaPzHOVsjocabKtWpGca0j4wKzZUFYs1OlVtBsSic/23mwkcXsAWk5i5Xv7VDKJC7m2PR5if2Ia4pVhFCTOh01uq/1/CwcC9KqM268aIRwGRoaOrfS8vfyNV+WmcI4T925nwN0JB6dLFpVPuMXza1j9eG9qwM4YRULLnuhw0MtdT+nn5rndRnzWiAQkkYGUBUjK1ApQxWsTXIUAOiA3S/J8S3QTCMxUiNUx+vGkmcaXOjoMtEe0Q34PGcaB4k9Jn1MIqdGZi0jLza9ociy1a5/bTOTaGEs+pusK0UF0gQoZapOxeAbgEfsrBczGT2p+Xclw9rXmCkbP/5ZGSu7isLQ7WEZ3x+pARwnzQhT9w1UTHhUdR3g2M2ItG3LFQh1xKFCXznHDoEYGG1x4HE1FtJUssHB4+aP2YwxLB25ifri+upfKm6JVV2xiY8Xt2um0OUmwMF5HGFpe7XFMf8QkM1P+hEna5+/oMDRdMRAAXy63yvkh514em+IKGLvAUpqROSRQI8twtQ4CzeNwqfeAcg9ZO+vTxrKocWUOC3zoBSrhGK0pfBdvsJcPlbBt4Det2XGH3LpLw3E3surNgXzc95hFfR0SZFNebEOFRFemNuepWjURm9VVJoMKHjF16ghpTcyan0+hqV2l67NsMVQ0GH3t1A5QFg0vLeJpJ1N1WzaRs5mjosDG+CY2KJKiM+kXSyHyBA9v031NALQJ/Plgd2upHi5K0Yrv713eHIs1BnQ/L+EQda1fYMkBmL/sUklAVZcx8Rt6iyKaJPL+KiWOJzUHFBCgC70NrJVo89C/LXW5COaJjUBn0i6GootUpvQxRX+3+Tr17phPT/IoET3wjmRABss74dsQUrJohFTOj4stFMIIFdgYJKoZIhvcNAQcBoIIFZwSCBWMwggVfMIIFWwYLKoZIhvcNAQwKAQKgggTuMIIE6jAcBgoqhkiG9w0BDAEDMA4ECCaIES/BIXjFAgIIAASCBMiGpeWXl+LLj8ee75oFpTFITvdQT50Fmpi7eTHFXr4GEuPOnKsTr9vMqFp9CA2Tbuo6ALRBDpiKpYhL7085BczFRC4XpQRdDK94qSqFRJ5/SwnilhT+CEyytLJgBb1LpZotM34wF/onWST4iiQmCiOA6iQte7x7R2U8OE3ld/6DqljiwVEusnSSB9jmbau79cpkl6T2XpsKszKI25wboPefzcR5kFbzQBgLD6HCn8Z3zDrfCiWkL9q9z+waE8u0ljW3zHJCv69XfDPfwK/eppGysRXRaxZhnEs/neN+Bk8YzdMWCj1hCwW9cGL9Y5NRE4SF3TuS+y808Vp+JY9kQkofK4Lt3a+DSzK4rQccieGRw/8H8+y88zJJHPleN3mzKL502g92IO4BWLouAevF6hh7IZ5pJSTfWmdQyYxluD5cepbriu1lTW0Y78LJyHKpXIo4WoKpRBe9NvVcovE22Z75cheQjoH/b8mglfZbi5FqLL2+AIRTJOgtZpPH6YvqZk83PS8vrvIN6DMYnSbErAsFkP0kvzuoa7FZZGfq4uU0OUpqjoySINMnTjiPxySgKpbsQbIyhoQ47lvkwOJBZrL1cBTkYG/x/juEYJTY34QwzNmam0P7kuSjckkulJI4H1/MliDeAL2ThlMEtbUxQamFHO8F2r7CDrVfu9aBuHmrzRhU/gL8O93dRxMZzi49EpTYDIFJkaXQeVGrQqw4XPZgUoYMIdRYFZx25qQCCCHIjW6TvTZ7LQg06ee35GMkotG2VIRxWh3AT+RF9V9yQkwtrsd9xG9J4f7jz2FXv9IwsSMZJp/ctyeS9bqO0+5Wn0d5h1awzoD29l+iRhfUqw+9hfdT/apH+xMXEl/XRXLrVInSiUrCI/VdmT+xhUu/nziLMQ8H7yb0+Z6btg/quM6VykS/eWeqczn+cTXNxlgmSmEaNYdwsT0EMFQ4+1bXlstSFtQazql+L1755a/nMgHp8vb0Cs7Ad5plX9GBE9q38P0aWBTuVufZLE/ildulLCo3cBvrdPHOXg+Ke7v8p2CIf9OMPkW2dh1oSZe2uaQH9vNcBSrJ/THEkU0mxHJ2bVIn6YXHP3bFz0ggbfdZqdboA6GrXoE4bs8MWgUd/gaKUinQL9RRxRfT3oDJEGF4rSpSMAWTAYJZ1yFBqBl7GUvMijUQR43ky0rKJuDLQnrWbB2MeIQ+aemPl9xoAZh3hGES5L9ugAVyOJnwcbWowUoqfABiuT3sYqtxdKnN9KuPqDGE4Q7XNNhH8bhCKjAj8SHmJSrzsf0gAWeAPsmECupYKB/LCRXJBH/Cz2YPcxDigjcn0D3CcFAB0MnwW0XJ0SUfC419hNIRX5gSCmlW1KpwCaN5H3E9coLo4y2YoD3tg7YizowfbgwADElZSIevmN42erOpzctBk0Iw+yB+bgTELuHuMcyd3hTH1PynWnwelEbSi/UIcJZ8zYDN8cDzC+YIcIJXU4U022HXjR1JpVbDVasij8kGXLiJlO40ClKOoKcMFJH7jThySbQS5ZQOAsrwGl3RB1e5kXRb9LT1fak0mCwYpSmhb5hKKUJhqvpJJLSiLINJfv1wXeVn1N7iTjqpr6QdOqGiIfwbKunB4G/MSiUrGU2/9PcxWjAjBgkqhkiG9w0BCRUxFgQUU2HI/Zc9/3M0OI+Ytu6hj4JcCnAwMwYJKoZIhvcNAQkUMSYeJABUAGUAbgBwAGEAeQAgAEMAZQByAHQAaQBmAGkAYwBhAHQAZTAtMCEwCQYFKw4DAhoFAAQUe4QrVtw9kk6XqIRVlmu5WTrJN98ECMg+z9v9Ij3J
---
# Source: sw-api/templates/credential/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: alipay-credential  
  namespace: develop
type: Opaque
data:
  "sstar-develop-alipay-appCertPublicKey.crt": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURqekNDQW5lZ0F3SUJBZ0lRSUNBUkJzdXdDMlljV2FMK0ZUYkJvakFOQmdrcWhraUc5dzBCQVFzRkFEQ0JrVEVMTUFrR0ExVUUKQmhNQ1EwNHhHekFaQmdOVkJBb01Fa0Z1ZENCR2FXNWhibU5wWVd3Z2RHVnpkREVsTUNNR0ExVUVDd3djUTJWeWRHbG1hV05oZEdsdgpiaUJCZFhSb2IzSnBkSGtnZEdWemRERStNRHdHQTFVRUF3dzFRVzUwSUVacGJtRnVZMmxoYkNCRFpYSjBhV1pwWTJGMGFXOXVJRUYxCmRHaHZjbWwwZVNCRGJHRnpjeUF5SUZJeElIUmxjM1F3SGhjTk1qQXhNVEEyTURZMU16RTNXaGNOTWpNeE1UQTFNRFkxTXpFM1dqQmgKTVFzd0NRWURWUVFHRXdKRFRqRVZNQk1HQTFVRUNnd001cktaNTY2eDU0NnY1YUtETVE4d0RRWURWUVFMREFaQmJHbHdZWGt4S2pBbwpCZ05WQkFNTUlUSXdPRGd4TURJeE9ERTFNek14TkRrdE1qQXhOakV3TXpFd01EYzRNVFkwTWpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCCkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUozckNhRGltOXYwcmJjSWw4QUsrU1dSd3RHNDV1Z1BraldwL2ZjUkdjbzRoNkI4V0s0eXlna0EKM3QxanRQY3hKWWF1Y3RjZmM3RDBSTlQrRFhOKzBqMUdlYUNWaURoOXRRUGZoWk93N0pUbUc3ZURLa2RXdXRaNUcrWnhtL3dFb0p0bwo2OGhCeTN1ZVFOVjRaUW85TFFDWi9GOU1jajBQejQ0SU9JdTBvQU90UnZyQkVqdDlVMTVvejJDTDJTRm05U0VtSlFPSmpPM09FbXA2CnZpVmF5OGRhUzl6Z2tzR2hMN05aempDbHFtWWVQZGxwN0pRb2ZuV3oyUEFDV2krK3VqenRBYlo2ZkFXOWR0TndVV3hyNmUrSStsVE8KWVBIUlpNczloemdvcnM1TC9DMHZsd1hFdUw3VTBHdjVoSUwzRk9sTVZEUnc4MzJ3TzQ1L2lHU2pQTUVDQXdFQUFhTVNNQkF3RGdZRApWUjBQQVFIL0JBUURBZ1R3TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBOVZDanV0cFV4Um5seVN3Y2s3Uy82cTdFM0dpcmxLU2NlCjlPS2RHYU9nWUMzckgzRzZGQjBoVTJ3c2F1eGkzSFRqZENKNXFLSGxNVHcyd1o3ZTgrNzVuRjBZNTV1TW1vczVOWDFUNU1mQzEyNDQKdUVwckpBQnR3MWZVVDlRUHA1VGxZUGcyTFJpNkhSa1hvamROanNFWkF3c0tFZmtNSWt2SnpWQWxYRHpORnZLR1JoMEJESUpObWVMZQpVQ0RkLys2TnhDNDZQRjdaNVJXVFhCajlLYnlhbnZ3SmsrTTA5azZxd0Frak5NZ2RuTlovL3lWN0xmblQxWUNpRXdrdXVWeTVBNjhyCm52TlJqQ3l1b0FrSVA1Sk1YUlBpdm9ucWI3TkcxRmlFLzUyM0U5OG80aEc4dkZXbCszRkhHZkFzRU0vUnlHOWcxYmxXaUE2UUNBSHcKbUg4KwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  "sstar-develop-alipay-alipayRootCert.crt": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJzekNDQVZlZ0F3SUJBZ0lJYWVMK3dCY0t4bnN3REFZSUtvRWN6MVVCZzNVRkFEQXVNUXN3Q1FZRFZRUUcKRXdKRFRqRU9NQXdHQTFVRUNnd0ZUbEpEUVVNeER6QU5CZ05WQkFNTUJsSlBUMVJEUVRBZUZ3MHhNakEzTVRRdwpNekV4TlRsYUZ3MDBNakEzTURjd016RXhOVGxhTUM0eEN6QUpCZ05WQkFZVEFrTk9NUTR3REFZRFZRUUtEQVZPClVrTkJRekVQTUEwR0ExVUVBd3dHVWs5UFZFTkJNRmt3RXdZSEtvWkl6ajBDQVFZSUtvRWN6MVVCZ2kwRFFnQUUKTVBDY2E2cG1nY2Noc1RmMlVuQmVMOXJ0cDRudytpdGsxS3pybWJucW8wNWxVd2t3bFdLKzRPSXJ0RmRBcW5SVApWN1E5djFodGt2NDJUc0l1dHpkMTI2TmRNRnN3SHdZRFZSMGpCQmd3Rm9BVVRES3hsOWt6RzhTbUJjSEc1WXRpClcvQ1hkbGd3REFZRFZSMFRCQVV3QXdFQi96QUxCZ05WSFE4RUJBTUNBUVl3SFFZRFZSME9CQllFRkV3eXNaZloKTXh2RXBnWEJ4dVdMWWx2d2wzWllNQXdHQ0NxQkhNOVZBWU4xQlFBRFNBQXdSUUlnRzFiU0xlT1hwM29COEg3Ygo1M1crQ0tPUGwyUGtubVdFcS9sTWh0bjI1SGtDSVFEYUhEZ1d4V0Z0bkNyQmpIMTYvVzNFem43L1UvVmpvNXhJCnBEb2lWaHNMd2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRjB6Q0NBN3VnQXdJQkFnSUlIOCtoaldwSURSRXdEUVlKS29aSWh2Y05BUUVMQlFBd2VqRUxNQWtHQTFVRQpCaE1DUTA0eEZqQVVCZ05WQkFvTURVRnVkQ0JHYVc1aGJtTnBZV3d4SURBZUJnTlZCQXNNRjBObGNuUnBabWxqCllYUnBiMjRnUVhWMGFHOXlhWFI1TVRFd0x3WURWUVFERENoQmJuUWdSbWx1WVc1amFXRnNJRU5sY25ScFptbGoKWVhScGIyNGdRWFYwYUc5eWFYUjVJRkl4TUI0WERURTRNRE15TVRFek5EZzBNRm9YRFRNNE1ESXlPREV6TkRnMApNRm93ZWpFTE1Ba0dBMVVFQmhNQ1EwNHhGakFVQmdOVkJBb01EVUZ1ZENCR2FXNWhibU5wWVd3eElEQWVCZ05WCkJBc01GME5sY25ScFptbGpZWFJwYjI0Z1FYVjBhRzl5YVhSNU1URXdMd1lEVlFRRERDaEJiblFnUm1sdVlXNWoKYVdGc0lFTmxjblJwWm1sallYUnBiMjRnUVhWMGFHOXlhWFI1SUZJeE1JSUNJakFOQmdrcWhraUc5dzBCQVFFRgpBQU9DQWc4QU1JSUNDZ0tDQWdFQXR5dFRSY0JOdXVyNWg4eHV4bmxLSmV0VDY1Y0hHZW1HaThvRCtiZUhGUFRrCnJVVGxGdDlYbjdmQVZHbzZRU3NQYjl1R0xwVUZHRWRHbWJzUTJxOWNWNFA4OXFrSDA0VnpJUHdUN0F5d0pkdDIKeEF2TXMrTWdIRkp6T1lmTDFRa2RPT1ZPN053S3hIOEl2bFFnRmFiV29tV2syRWk5V2ZVeXhGalZPMUxWaDBCcApkUkJlV0xNa2R1ZHgwdGwzKzIxdDFhcG5SZUZOUTVuZlgyOXhlU3hJaGVzYU1IRFpGVmlPL0RYRE5XMkJjVHM2CnZTV0t5SjRZSUlJelN0dW1EOEsxeE1zb2FaQk1EeGc0aXRqV0ZhS1JnTnVQaUluNGtqRFkza0M2NlNsLzZ5VGwKWVV6OEF5YmJFc0lDWnpzc2RaaDdqY05iMVZSZms3OWxnQXBybS9LdGwrbWdyVTFnYU1HUDFPRTI1SkNicWxpMQpQYncvQnBQeW55UDkrWHVsRSsybXhGd1RZaEtBd3BESURLdVlzRlVYdW84dDI2MXBDb3ZJMUNYRnpBUU0ydzdICkR0QTJuT1hTVzZxMGpHREo1K1dhdUgrSzhaU3ZBNng0c0ZvNHUwS05DeDBST1RCcExpZjZHVG5ncW8zc2orOTgKU1ppTU5MRk1Rb1FramtkTjVRNWc5TjZDRlpQVlo2UXBPMEpjSWM3UzFsZS9nOXo1aUJLbmlmckt4eTBUUWp0RwpQc0R3Yzh1YlBuUm0vRjgyUlJlQ295Tnl4NjNpbmRwZ0ZmaE43K0t4VUlROWNPd3dUdmVtbW9yMEErWlFhbVJlCjlMTXVpRWZFYVdVREsrNk8wR2w4bE81NzF1STVvbllkTjFWSWdPbXdGYmUrRDhUY3V6VmpJWi96dkhyQUdVY0MKQXdFQUFhTmRNRnN3Q3dZRFZSMFBCQVFEQWdFR01Bd0dBMVVkRXdRRk1BTUJBZjh3SFFZRFZSME9CQllFRkY5MAp0QVRBVHdkYTZ1V3gyeUtqaDBHeW5PRUJNQjhHQTFVZEl3UVlNQmFBRkY5MHRBVEFUd2RhNnVXeDJ5S2poMEd5Cm5PRUJNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUNBUUNWWWFPdHFPTElwc3JFaWtFNWxiK1VBUk5TRkpnNnRwa2YKdEoyVThRRi9EZWplbUVIeDVJQ2xRdTZhanhqdHUwQWllNC8zVW5JWG9wOG5IL1E1N2wrV3l0OVQ3TjJXUGlOcQpKU2xZS1liSnBQRjhMWGJ1S1lHM0JURlRkT1ZGSWVSZTJOVXlZaC94czZiWEdyNFdLVFhiM3FCbXpSMDJGU3kzCklPRFF3NVE2enBYajhwcllxRkhZc092R0NFYzFDd0phU2FZd1JoVGtGZWRKVXhpeWh5QjVHUXdvRmZFeENWSFcKMDVaRkNBVllGbGRDSnZVemZ6cld1Yk42d1gwREQyZHd1bHRnbWxkT24vVy9uOGF0NTJtcFBOdklkYlpiMkY0MQpUMFlaZW9XbkNKcllYanEvMzJvYzFjbWlmSUhxeVNueU1uYXZpNzVEeFBDZFpzQ09wU0FUNGo0bEFRUkdzZmdJCmtrTFBHUWllTWZOTmtNQ0toN3Fqd2RYQVZ0ZHFoZjBSVnRGSUxIM095RW9kbGsxSFlYcVg1aUU1d2xhS3pEb3AKUEt3ZjJRM0JFcnExeENoWUdHVlMrZEV2eVhjLzJuSUJsdDd1TFdLcDRYRmpxZWtLYmFHYUxKZGpZUDViMnM3TgoxZE0wTVhRL2Y4WG9YS0JrSk56RWlNM2hmc1U2RE9SRWdNYzFESXNGS3hmdU13WDNFa1ZRTTFJZjhnaGI2eDVZCmpYYXl2K05MYmlkT1N6azR2bDVRd25nTy9KWUZNa29jNmk5TE53RWFFdFI5UGhucmR1YnhtcnRNK1JqZkJtMDIKNzdxM2RTV0ZFU0ZRNFF4WVdldzRwSEUwRHBXYld5L2lNSUtRNlVaNVJMdkI4R0VjZ3Q4T043QkJKZU1jK0R5aQprVDlxaHFuK2x3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNpRENDQWd5Z0F3SUJBZ0lJUVg3NlVzQi8zMG93REFZSUtvWkl6ajBFQXdNRkFEQjZNUXN3Q1FZRFZRUUcKRXdKRFRqRVdNQlFHQTFVRUNnd05RVzUwSUVacGJtRnVZMmxoYkRFZ01CNEdBMVVFQ3d3WFEyVnlkR2xtYVdOaApkR2x2YmlCQmRYUm9iM0pwZEhreE1UQXZCZ05WQkFNTUtFRnVkQ0JHYVc1aGJtTnBZV3dnUTJWeWRHbG1hV05oCmRHbHZiaUJCZFhSb2IzSnBkSGtnUlRFd0hoY05NVGt3TkRJNE1UWXlNRFEwV2hjTk5Ea3dOREl3TVRZeU1EUTAKV2pCNk1Rc3dDUVlEVlFRR0V3SkRUakVXTUJRR0ExVUVDZ3dOUVc1MElFWnBibUZ1WTJsaGJERWdNQjRHQTFVRQpDd3dYUTJWeWRHbG1hV05oZEdsdmJpQkJkWFJvYjNKcGRIa3hNVEF2QmdOVkJBTU1LRUZ1ZENCR2FXNWhibU5wCllXd2dRMlZ5ZEdsbWFXTmhkR2x2YmlCQmRYUm9iM0pwZEhrZ1JURXdkakFRQmdjcWhrak9QUUlCQmdVcmdRUUEKSWdOaUFBU0NDUmE5NFFJMHZSNVVwOVlyOUhFdXB6NmhTb3lqeVNZcW83djgzN0tubWp2ZVVJVU5pdUM5cFdBVQpXUDNqd0xYM0hremVpTmRlZzIyYTBJWlBvU1VDcGFzdWZpTEFuZlhoNk5JbkxpV0JyakxKWERTR2FZN3Zhb2t0CnJwWnZBZG1qWFRCYk1Bc0dBMVVkRHdRRUF3SUJCakFNQmdOVkhSTUVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUloKNFpUZ0Rwa3NITDJxY3BrRmt4RDJ6VmQxNlRBZkJnTlZIU01FR0RBV2dCUlo0WlRnRHBrc0hMMnFjcGtGa3hEMgp6VmQxNlRBTUJnZ3Foa2pPUFFRREF3VUFBMmdBTUdVQ01RRDRJb3FUMmhUVW4wanQ3b1hMZE1KOHE0dkxwNnNnCndIZlBpT3I5Z3hyZWIrZTZPaWR3ZDJMRG5DNE9VcUNXaUY4Q01BendLczRTbkRKWWNNTGYydnBrYnVWRTRkVEgKUmdseitIR2NUTFdzRnM0S3hMc3E3TXVVK3ZKVEJVZURKZURqZEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRHhUQ0NBcTJnQXdJQkFnSVVFTWRrNmRWZ09FSVMyY0NQMFE0M1A5MFBzNVl3RFFZSktvWklodmNOQVFFRgpCUUF3YWpFTE1Ba0dBMVVFQmhNQ1EwNHhFekFSQmdOVkJBb01DbWxVY25WelEyaHBibUV4SERBYUJnTlZCQXNNCkUwTm9hVzVoSUZSeWRYTjBJRTVsZEhkdmNtc3hLREFtQmdOVkJBTU1IMmxVY25WelEyaHBibUVnUTJ4aGMzTWcKTWlCU2IyOTBJRU5CSUMwZ1J6TXdIaGNOTVRNd05ERTRNRGt6TmpVMldoY05Nek13TkRFNE1Ea3pOalUyV2pCcQpNUXN3Q1FZRFZRUUdFd0pEVGpFVE1CRUdBMVVFQ2d3S2FWUnlkWE5EYUdsdVlURWNNQm9HQTFVRUN3d1RRMmhwCmJtRWdWSEoxYzNRZ1RtVjBkMjl5YXpFb01DWUdBMVVFQXd3ZmFWUnlkWE5EYUdsdVlTQkRiR0Z6Y3lBeUlGSnYKYjNRZ1EwRWdMU0JITXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT1BQU2hwVgpuSmJNcXFDdzZCejFrZWhub1BzdDlwa3IwVjlpZE93VTJveVM0Ny9IakpYazlSZDVhOXhmd2tQTzg4dHJVcHo1CjRHbW13c3BEWGpWRnU5TDBlRmFSdUgzS01oYTFBazAxY2l0YkY3Y1FMSmxTN1hJK3Rwa1RHSEVZNXB0M0VzUWcKd3lrZlpsL0ExanJuU2tzcE1TOTk3cjJHaW01NGN3eittVE1nRFJoWnNLSy9sYk9lQlBwV3RjRml6alhZQ3FodwpXa3R2UWZaQllpNm80c0hDc2huT3N3aTR5VjFwK0x1RmNRMmNpWWRXdlVMaDFlWmhMeEhiR1h5em5ZSGkwZEdOCnorSTlIOGFYeHFBUWZIVmhiZEhOemk3N2hDeEZqT3kraEhyR3N5empyZDJzd1ZRMmlVV1A4QmZFUXFHTHFNMWcKS2dXS1lmY1RHZGJQQjFNQ0F3RUFBYU5qTUdFd0hRWURWUjBPQkJZRUZHL29BTXhUVmU3eTArNDA4Q1RBSzhoQQp1VHlSTUI4R0ExVWRJd1FZTUJhQUZHL29BTXhUVmU3eTArNDA4Q1RBSzhoQXVUeVJNQThHQTFVZEV3RUIvd1FGCk1BTUJBZjh3RGdZRFZSMFBBUUgvQkFRREFnRUdNQTBHQ1NxR1NJYjNEUUVCQlFVQUE0SUJBUUJMblVUZlc3aHAKZW1NYnVVR0NrN1JCc3d6T1Q4M2JETTY4MjRFa1VuZitYMGlLUzk1U1VOR2VlU1dLMm8vM0FMSm81aGk3R1pyMwpVOGVMYVdBY1lpemZPOTlVWE1SQlB3NVBSUitnWEdFcm9uR1V1Z0xweHNqdXlub0xRdThHUUFleXNTWEtiTjFJClV1Z0RvOXU4aWdKT1JZQSs1bXMwczVzQ1V5U3FiUTJSNXovR29jZXlJOUxkeElWYTFSalZYOHBZT2o4SkZ3dG4KREpOM2Z0U0Z2Tk1Zd1J1SUxLdXFVWVNIYzJHUFlpSFZmbERoNW5EeW1DTU9RRmNGRzNXc0V1QitFWVFQRmdJVQoxREhtZFpjejdMbHg4VU9aWFgySnVwV0NZeksxWGhKYityNGhLNW5jZi93OHFHdFlsbXlKcHhrM2hyMVRmVUpYCllmNFpyMGZKc0d1dgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  "sstar-develop-alipay-alipayCertPublicKey_RSA2.crt": LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURxRENDQXBDZ0F3SUJBZ0lRSUNBUkJvWlk1c2w4MzB3bmk3WXc2ekFOQmdrcWhraUc5dzBCQVFzRkFEQ0JrVEVMTUFrR0ExVUUKQmhNQ1EwNHhHekFaQmdOVkJBb01Fa0Z1ZENCR2FXNWhibU5wWVd3Z2RHVnpkREVsTUNNR0ExVUVDd3djUTJWeWRHbG1hV05oZEdsdgpiaUJCZFhSb2IzSnBkSGtnZEdWemRERStNRHdHQTFVRUF3dzFRVzUwSUVacGJtRnVZMmxoYkNCRFpYSjBhV1pwWTJGMGFXOXVJRUYxCmRHaHZjbWwwZVNCRGJHRnpjeUF5SUZJeElIUmxjM1F3SGhjTk1qQXhNVEExTVRjME56SXpXaGNOTWpNeE1UQTBNVGMwTnpJeldqQjYKTVFzd0NRWURWUVFHRXdKRFRqRVZNQk1HQTFVRUNnd001cktaNTY2eDU0NnY1YUtETVE4d0RRWURWUVFMREFaQmJHbHdZWGt4UXpCQgpCZ05WQkFNTU91YVVyK1M3bU9XdW5Tamt1SzNsbTcwcDU3MlI1N3VjNW9xQTVweXY1cHlKNlptUTVZV3M1WSs0TFRJd09EZ3hNREl4Ck9ERTFNek14TkRrd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUM5R0YwdU9DMi82bHpxL2NHYTBMTHIKTGhzSWZxaEVtdWhjTk40VlZ6N3crYWowa1R4ZSt2NS9uMjZCdGp3VXZOZG1XWHBvSjNnbmVNKzdIdDRyZ3ZuQStUQ0lqRjdXd01KVApmTFVwZ1VjeExTdmh1RlNmdEQ1Qkd2a2o3WVkrQzdMelFkUG54NEdhcnJUU1Q4anNOLzFyV0VoQkZLNFJ6UUtYSUI2akVlRUxZaVFtCmF3bU9iSzlTc094OVp5T2UxWFhSSDVraEJPU2pnbFM0eWhyTmpEZUcyYVdYMldEWEM0bVhPcUhFZXlpOXVnUGNFMVRuVEpXNlhVMEgKQndoZGFhOTUzc0JtR3NGRDRmSmNYSUhNb1pDdHZ5dXEzNDZiQ3Z5ZXpNTUVHVFhUUzVqQmNMSTl3OHppNTMveHpsMnVSVFFlZlZkbQp0c25zWElMWEV3S2JLSDdSQWdNQkFBR2pFakFRTUE0R0ExVWREd0VCL3dRRUF3SUU4REFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBClFFcU82ejdxRHZrNlk2d2FIalFLTTV0SWtnQy9PVUVZS3hUQUZyZURKZWd4b1NRTzhlWCtyVmlwODRhS1hmWUlSaUxXS1c5U29VY1cKTzM1OFI0bkNteFNiNmhSRG1Tc3VaV2Z6U0Y3RHVTdzdtdnFxVGZJVzBuVjBoakJOc3hYSjVhNGFJN2lVSnNKWjhCZHkyNm5xRVpESApWcVlvV3pNOVVkTlZGU0UyN3FVNjZPN1F1TUt1T0RYeWFvZ0dNc3o3YVFUSXJ1YmRHN3NkZkk3K2MyK0twSjMxQWVTQjF6YXp1c3JnCmFvNFE2Zlo0N3Zqa3ZsUWRlTFdidmFiMndWNk12MVlWSU9hQ25IandUelczeW04UWJxNnpQb0xsWkpyWG9xcWcvUWdvOGVrS3UxWGUKeVZZVk9tTkpNN0ZneVlObHkzaHFsemhDSXZXVUZ0enp2US8rVFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
---
# Source: sw-api/templates/credential/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: gcprecommendation-credential
  namespace: develop
type: Opaque
data:
  "sstar-develop-gcprecommendation-credential.json": ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAic3N0YXItc3ctYmFja2VuZC1kZXYiLAogICJwcml2YXRlX2tleV9pZCI6ICIwNjkyM2UzYmZkMjFhYmRhNWQwMmUwZWIyZGJjMTM4ZTM5ZTc3ODBmIiwKICAicHJpdmF0ZV9rZXkiOiAiLS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tXG5NSUlFdlFJQkFEQU5CZ2txaGtpRzl3MEJBUUVGQUFTQ0JLY3dnZ1NqQWdFQUFvSUJBUUN6VmNpUmJKbGRHM29aXG5sMWdkNDVRd1ZIeEV2dzV4a0xrMHlZa1RkY1RWVUdNOHJhYnY2OCtld1E4blZGc3VBOWQxblpqUG12OWZTRWtGXG5NWjN6K1NzbXY3WHE3R3MwWHdPa0h6b0Q5UEZaTjQ4L2VkQy8yc1F4TlFUTVAxNnYwdzQvcGdOeHpBUisyNGJDXG5XQ0RGYmxYZmY0ZUJNZVJyNjA0OFpWSkhHNGtIeGppQzBXbjlSSXZPQ0tEYmRYMi9VdUVEYTNPc2htcGk2LzZDXG5uS2ZlT3lSRm02LzlmR2F0QXBQT29VWTI1V29LcEEvdlU4L2w1OWpwZno0WUV2REVRMWJHalRiYkxwTllVWlNiXG4rZTlUbTBQVUJyY0RGZDFhK3ZmSkJKR1lzV2VHMlp2M2d2MXJ5QmJLamNmU2FKVGpMSlVVbDBzYm1RUnNrMVRMXG5ZUjFFejRyQkFnTUJBQUVDZ2dFQUEvL2dLNlNDeWt6TFlGSHU5ZlZKWC9xUExpTHJFNHUxNzAwTUkvaVFhbTVHXG5JZWhOaVpxcGg0VGJoMEtlWEZ4YkxDNjlNb1FabjRQNnliaDNLVmo1UDhzdXdRMjJXWThPZzFUcndMWUp3aytkXG5US1JPMlI3cjVnTnhmWXlpcHlyTGJjR1FlaG9JVDZKZHVXeW83bkY1NXpTSUc0UHFJMjRETjkyYW5jQXAyOHRLXG5UNlEyZWRiVFlBOEs0K3ZvZ25ZK0dJd0tnMysrN2xwV2hLSjdHMWtURmZTSksxZVV1ZWRVSzNLZUZnSjN0cDRXXG54dWRDOEY2TE1QNjBUbkVJdUZ0TW1mamU3dzEza2tUSE94S2RNZy9qd0xoMjY2MS81b2FYMkRLeXhJa1lENW9WXG44WTRsRHg4b09XSkdCdXQ4L01TTkl3MGF4OWdHMXpYcUpkc091VlhsTVFLQmdRRHVVcGp1cmRKVXZaOTVZdlZlXG55NEJZZkF4Z0tPckRoL05lcUFLSmNIRjVXZWFzanZyVGVtL1Vua0toNEpZbjNSeGpudkNzc0YwRlJnSyt5ZGhMXG5vd1JlQ09oSzhHVnlnQnpEK1AvN1ZzeWN3NDRETHF5RmgrUDQ0N00rbFo1UmVUNlNETjlsK0ZKVDFJOHlUTmMwXG45OTFmV1hESlUvaWs0WGZwRU9DR2x1ZGFPd0tCZ1FEQW94a0JDOUg4SVBFZGJHRmI2UGl3UVRlV0w5Y3ltN0haXG41MUZ4RDFDWkE5L0Rhd01JeDE4WmdDdW1WRUErZkJvaWlyMmM1ZmwxYXhzcWVOOERVOU40dW5HZWNhYkNjeDVGXG44WXFDcHQwTUg5aS9iMCtpZ1JwZElOZ0ZZUjZjbGtSME1OTHFMalBoSWRYRnAzM3FDSGNYUVNJZlk2WTFYRkNSXG5tZXhoT1grak13S0JnUUNPVkw0SkxiNkQ1WXVzanpGRG4vM1MycUw1ZXZaYU9JTmNjTEt6S25oYXBScGl6REY0XG53NUt1UktZK3owWmVJR3VvQTNCeGNoTGI1MmdVVWEvZjNFZnJjUjVxUXhBVFJmZm9Bbm0rdmFRTnE2elFzYnRQXG5ORTB1ZzY2MUhkNGpnbW1nQ0JnVGFpNmc2ajFyS1FFT0hVb1VlL0lrQ3daZ1VsZXUxZW1COS9YTHFRS0JnQ01nXG5HamtVbks5cW1reVJMSmVEdllUMS8xckZVbW9KOWI0VDdjZTkwU1oxakdHbnE1LzRLcUVOdStmU1NQeWJ5SEF2XG4rQzhaeUFqZkJNOFR4eVptTEpOQSsrSzJPb0FPV2FETFVFUk9oTlBuSXJDVmJXSG1SSlppbk1FdVdsU1hHZGhOXG41c2VJc1RFRjZHTG9EWStWQjVJWDhFN2s3ck9nSjVqRkJsTWNGdWY5QW9HQVl0RW5Xd1ZpV2hLTGI3VGp2T0ZlXG51OXdYK1ZlMTN2Ukovakh4NHE0dXZ3UVN4RWVXU1ZLd3BrQ0haQ0lTQnNQY1BLTHVMKzBSV0VKZW9CMHBmYytwXG5QQW9GclI0WVBCcHlFV2x1LzNkZUIvaGw3U1ZvMzBJR2plTEJpbmlYejZiTHZSQndvUlJiWUVsQk91bXpHVzRUXG5TeGZQMHp3SDZEdWZqZzlaYkFQd2JFOD1cbi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS1cbiIsCiAgImNsaWVudF9lbWFpbCI6ICJkZXYtcmVjb21tZW5kYXRpb24tc3lzdGVtLTk4M0Bzc3Rhci1zdy1iYWNrZW5kLWRldi5pYW0uZ3NlcnZpY2VhY2NvdW50LmNvbSIsCiAgImNsaWVudF9pZCI6ICIxMTI1NzcwNjM0MzM2MjAyMDY5MjMiLAogICJhdXRoX3VyaSI6ICJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvYXV0aCIsCiAgInRva2VuX3VyaSI6ICJodHRwczovL29hdXRoMi5nb29nbGVhcGlzLmNvbS90b2tlbiIsCiAgImF1dGhfcHJvdmlkZXJfeDUwOV9jZXJ0X3VybCI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9vYXV0aDIvdjEvY2VydHMiLAogICJjbGllbnRfeDUwOV9jZXJ0X3VybCI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9yb2JvdC92MS9tZXRhZGF0YS94NTA5L2Rldi1yZWNvbW1lbmRhdGlvbi1zeXN0ZW0tOTgzJTQwc3N0YXItc3ctYmFja2VuZC1kZXYuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iCn0K
---
# Source: sw-api/templates/credential/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: remoteconfig-credential
  namespace: develop
type: Opaque
data:
  "sstar-develop-remoteconfig-credential.json": ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAic3N0YXItbWVyLWNsaWVudHMtZGV2IiwKICAicHJpdmF0ZV9rZXlfaWQiOiAiMjYxNGVjN2RjNDdkOGNlMmM5ODc5ZDdjZDgzNjAwYmYyMDFmOWQ5NSIsCiAgInByaXZhdGVfa2V5IjogIi0tLS0tQkVHSU4gUFJJVkFURSBLRVktLS0tLVxuTUlJRXZRSUJBREFOQmdrcWhraUc5dzBCQVFFRkFBU0NCS2N3Z2dTakFnRUFBb0lCQVFEVG02aXlwelh6M2lKZVxuVzFSL3FGa05hRzF1Y2puR3dnbHdLWlB2cE1oakVmLy9YL0RJaXlhbnYyK0RaNkxQSFZVTElJQmFBN0xUWEZ5d1xud0htaVpsOXZlck5lVmh2aituaUZXRnNHbjFSTyt2MklMRlFrNkVZRExvUDg3cmFWSTE0ZEpRdVJscGFGcTJxalxuMnJHdGNPeDlqNGl0M0taekwvZWZCL3N0TEQ5VmNFTTdiQVNzRzVnM3NYSnVZWHAzcllEZzNoNzRMUi9pa3BlVFxuZktxa1VMS3VYYmF5eklCN2Z2ZGtqT2hHR3pWRnh6WllCTk9YczMyU0RBSTdkazJGbll4UzlvVmhKS0JBdXRwT1xuQm92cEsrdlRHbjBjQ3Z5RmNReDNjcEM4YXhublo0N0pSQmFQdzQwcEptTEtPMU5CaVRaK1ZKQU12cVU0T1NadlxuUWRidW1BQ2RBZ01CQUFFQ2dnRUFEbzZrVGRvRDg2bGg2dVRVak0ycmhxa2E4aUNvaWR4YVl0MXhZR2lSSW9PZlxuL1ZUL3p3UUhuajJrc2NFRTZjT21VSlFsVUV2MTF1V0JPT1djMkllN1pBTm9hSUo2KzdXRTZnTjRpNTJWWXJPUVxua25nZU44WEUzejRwZFZLRXZBREpYaTdvdTFURk9SL2dQN0p4UzdHN2l5Mi9KTnJMbHB3RHFHeVhvblZyUy9qRFxubVF4d2d4K2ZKVkJ3OE1xM0xJdzh2b0FqMTF5SlZRWkZ0V1pvbTAyMWpOeGFpQ3M3SXh2MnY0ZzZXZlg3TnBoeVxuYm0zVlZvZXVJYmxHTUZvQk1MeVF4bnBjcnRKR1ZSUURqUXdXWi92SFV1aXZ1bGJsbzFRa2xNNyt5bTYreDh3bVxubXFOY1oxeWdqWjFVTVhEZ1dpQnRSSWJ0R2ovSnVCcFNPZWtZTEl2SlB3S0JnUURxZnQ0bnNQK2oyUS9lOU5VVFxuL0pHZjFtblIyVG9pMTAyNVp0NU9na3p2WnEzcnNGRkhFc1FPaTJBK0tFU3ZFTDhsVndReFBvZUNoNGo4VThBb1xuejNaTGs4ZkV4R3hHeFBLRCtFK1RUek1rSjlXWHRRWWI5cEZCSFY4OENvRU8xV3A0ZTB0aFdWN2E2NWNNRWhyN1xuTnltdGlOQVp2Mkh5Sy9ldEZETUEvaVhlUndLQmdRRG5BM2pvUnVCdW44aDhSQ295eTI1NjBnVWFlTHBXZUx6eVxub21DR09YS1VtZjlEMXZqQVJrbE1NQ01MOE1xUDA4aXJEejFZMHVrY2J5SmJkOGl1STBYcUVUSW1jSXZoZStCZ1xuZnNuVFEzUlpCUFNEa1BINFhYeVMxQmhMS09YcUd5bXFrc3IzeHJzQ1dIc3A3bjJsM0ExSzlNU3N2dTU4OFBFR1xuTUh0ZWRuUG4rd0tCZ1FDS2lDcThMaC9JYjBxbC8rUUZxN2RvUXlZKzErTTFoQmFoeWpqWkRyZGUwejA2T082N1xuVzBYQ0JlcjByWnR1QlNtM2FJSE1pZEZLZHNHaHQrU1U5NE0rUU83S3V2UHdseGRpaVlhUlV6KzJRMlkyK3JYQ1xuUFZjd3JhWitkUUlyZmo4cE1FV25IRUlpZVAzQ0hzd2J6MG5yQUNGWXBLeTdnZWdQTXhpeXBISkFyd0tCZ0VYRFxuOXErdk4vZ3dxUXRlU3FBc2I2RUg3Q0tpY3lQS01zWFQ0L0tsUnNVNS9LMHdMczlpYXFCbnFTM2gra3FWV3ZUT1xuRldqTnlUaWRGM01vS2FMdFpCL2NNWmtLUkRSRWhPNmZXN1JCbXRHSGZaQitKWlVzSm9MeEtxVUlKT2NlYk9ibVxuamdWbUx2UDJaTHUxR3AwTVo3ZExWRm9YRDA4TU5MMzV4a2d3M2JBaEFvR0FhU3VMTStJU01iRVpGVU9lSlBGa1xuM1pVa29vYmlSVmFlSjVNK3FWREJONEFDUDNnVVQ1SFVVbFRtZlV2b2U3eml3b1lRZS9KMDhJR1JhLzIyTGVEOVxuYW1BVnlnczNoN3p6MEN3dVNYSVZVd0FuNFRBY3pFaGpBb1JwSGd3SkhVamp4RXRZeDJLaldhYXJ4eFVPRTJtelxubG0wc0JxdHZkUTJXNnNvMlptVzJrNkk9XG4tLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tXG4iLAogICJjbGllbnRfZW1haWwiOiAiZmlyZWJhc2UtYWRtaW5zZGstZ3JxdmhAc3N0YXItbWVyLWNsaWVudHMtZGV2LmlhbS5nc2VydmljZWFjY291bnQuY29tIiwKICAiY2xpZW50X2lkIjogIjExMTY0OTE4MTgyNDkwMzU1NjMwMCIsCiAgImF1dGhfdXJpIjogImh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbS9vL29hdXRoMi9hdXRoIiwKICAidG9rZW5fdXJpIjogImh0dHBzOi8vb2F1dGgyLmdvb2dsZWFwaXMuY29tL3Rva2VuIiwKICAiYXV0aF9wcm92aWRlcl94NTA5X2NlcnRfdXJsIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL29hdXRoMi92MS9jZXJ0cyIsCiAgImNsaWVudF94NTA5X2NlcnRfdXJsIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL3JvYm90L3YxL21ldGFkYXRhL3g1MDkvZmlyZWJhc2UtYWRtaW5zZGstZ3JxdmglNDBzc3Rhci1tZXItY2xpZW50cy1kZXYuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iCn0K
---
# Source: sw-api/templates/micros-auth/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: micros-auth-secret
stringData:
  config.yaml: |-
    env: develop

    log:
      level: debug

    grpc:
      addr: "0.0.0.0"
      port: "50051"

    credentials:
      jwt:
        access_expires_in: 300
        refresh_expires_in: 2592000
        secret: ThisIsSmallWorldJWTAuthToken

    sendbird:
      api_origin: "https://api-6B076AE5-E263-4F8C-A4AC-53F455076B5A.sendbird.com"
      api_token: "564da7ab898cb06bd880d7f366cb257d0d1fe5a9"
      world_channel: "sendbird_open_channel_60318_9e99e241f5674927fdb4195f64489de888027fc1"

    officialweb:
      host: https://www.dev.sw.sensestar.live

    postgres:
      - master:
          username: devRW
          host: "127.0.0.1"
          port: 5432
          db_name: smallworld
          password: AMUHtZqzXa7V
          sslmode: disable
          debug: false

      - slave:
          username: devRW
          host: "127.0.0.1"
          port: 5432
          db_name: smallworld
          password: AMUHtZqzXa7V
          sslmode: disable
          debug: false
    
    db_max_idle_connections: 10
    db_max_open_connections: 30

    redis:
      address: "10.59.177.11:6379"
      password: ""
      maxretries: 2
      db: 0

    captcha_input_times: 3
    number_of_verify_with_captcha_failed_limit: 3    
    queues:
      - name: "async_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 4
      - name: "slack_incoming_webhook_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 1.45152e+07
        sleep: 1000
        number_of_workers: 1
      - name: "sendbird_webhook_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 2
      - name: "red_envelope_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 3
      - name: "push_notification_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 3
      - name: "gcs_pubsub_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 1
      - name: "udpate_user_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 4

    default_currency: "TWD"

    cloud_trace:
      enabled: false
      sampler_probability: 0.01

    payload_interceptor:
      enabled: true

    health_check_log:
      enabled: true

    apple_tester:
      feeds_to_be_seen:
      - 41
      - 42
      - 43
      - 44
      - 45
      - 46
      filter_enabled: false
      phone: "+886905310227"
      sms_code: "792857"
      user_uid: d225ecc6-fc07-4512-8cd4-a57f42400adb
      users_to_be_seen:
      - f90ecaf6-56e2-4794-9c83-aec2778cf03f
      - c06c2c6a-473b-447d-bc21-c62f361da969
      - edfa9c22-7ce1-4e42-aa0e-a77dec4e9505
      - 8bcea8d6-f467-4041-95a9-ffa5e90d7237
      - 2c5dc9f8-075b-4ee1-8df2-9410ba44d85a
      - 67a1d022-524f-43ef-9991-813decccbdf6
      - 02808330-b36f-4168-8fd0-6b9bd43cd299
      - d225ecc6-fc07-4512-8cd4-a57f42400adb
      - fc3082b7-9b86-47cb-ac27-31de1b52389d
      - 97667e33-5d6e-4ce5-a1e2-98d1eaa98cc4
      - 85c8eef0-9084-4a5b-b3a7-bd6791c3205b
      - bde79366-c15d-401d-bb7d-75b0f30e1cbe
      - 9472d66a-3d16-417a-a652-24be2128a9fc
      - 84ca7d65-ccae-4a6d-8db4-957e18a98a98

    firebase:
      remote_config:
        credential_filename: files/remoteconfig/sstar-dev-remoteconfig-credential.json
        is_get_setting_from_remote_config_enabled: true
        project_id: projects/sstar-mer-clients-dev
        scopes:
        - https://www.googleapis.com/auth/firebase.remoteconfig
    agent:
      legal_inviters:
      - b3774ffd-935e-46c5-82ff-0b6ca825880f
---
# Source: sw-api/templates/micros-bluffgame/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: micros-bluffgame-secret
stringData:
  config.yaml: |-
    env: develop

    log:
      level: debug

    grpc:
      addr: "0.0.0.0"
      port: "50051"

    services:
      auth: micros-auth:50051
      bluffgame: micros-bluffgame:50051
      club: micros-club:50051
      consumable: micros-consumable:50051
      event: micros-event:50051
      feed: micros-feed:50051
      file: micros-file:50051
      notification: micros-notification:50051
      payment: micros-payment:50051
      user: micros-user:50051

    sendbird:
      api_origin: "https://api-6B076AE5-E263-4F8C-A4AC-53F455076B5A.sendbird.com"
      api_token: "564da7ab898cb06bd880d7f366cb257d0d1fe5a9"
      world_channel: "sendbird_open_channel_60318_9e99e241f5674927fdb4195f64489de888027fc1"

    postgres:
      - master:
          username: devRW
          host: "127.0.0.1"
          port: 5432
          db_name: smallworld
          password: AMUHtZqzXa7V
          sslmode: disable
          debug: false

      - slave:
          username: devRW
          host: "127.0.0.1"
          port: 5432
          db_name: smallworld
          password: AMUHtZqzXa7V
          sslmode: disable
          debug: false

    db_max_idle_connections: 10
    db_max_open_connections: 30

    redis:
      address: "10.59.177.11:6379"
      password: ""
      maxretries: 2
      db: 0    
    queues:
      - name: "async_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 4
      - name: "slack_incoming_webhook_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 1.45152e+07
        sleep: 1000
        number_of_workers: 1
      - name: "sendbird_webhook_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 2
      - name: "red_envelope_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 3
      - name: "push_notification_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 3
      - name: "gcs_pubsub_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 1
      - name: "udpate_user_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 4

    bluffgame:
      host: "https://bluff.dev.sw.sensestar.live"

    default_currency: "TWD"

    cloud_trace:
      enabled: false
      sampler_probability: 0.01

    payload_interceptor:
      enabled: true

    health_check_log:
      enabled: true

    apple_tester:
      feeds_to_be_seen:
      - 41
      - 42
      - 43
      - 44
      - 45
      - 46
      filter_enabled: false
      phone: "+886905310227"
      sms_code: "792857"
      user_uid: d225ecc6-fc07-4512-8cd4-a57f42400adb
      users_to_be_seen:
      - f90ecaf6-56e2-4794-9c83-aec2778cf03f
      - c06c2c6a-473b-447d-bc21-c62f361da969
      - edfa9c22-7ce1-4e42-aa0e-a77dec4e9505
      - 8bcea8d6-f467-4041-95a9-ffa5e90d7237
      - 2c5dc9f8-075b-4ee1-8df2-9410ba44d85a
      - 67a1d022-524f-43ef-9991-813decccbdf6
      - 02808330-b36f-4168-8fd0-6b9bd43cd299
      - d225ecc6-fc07-4512-8cd4-a57f42400adb
      - fc3082b7-9b86-47cb-ac27-31de1b52389d
      - 97667e33-5d6e-4ce5-a1e2-98d1eaa98cc4
      - 85c8eef0-9084-4a5b-b3a7-bd6791c3205b
      - bde79366-c15d-401d-bb7d-75b0f30e1cbe
      - 9472d66a-3d16-417a-a652-24be2128a9fc
      - 84ca7d65-ccae-4a6d-8db4-957e18a98a98
---
# Source: sw-api/templates/micros-club/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: micros-club-secret
stringData:
  config.yaml: |-
    env: develop

    log:
      level: debug

    grpc:
      addr: "0.0.0.0"
      port: "50051"

    services:
      auth: micros-auth:50051
      bluffgame: micros-bluffgame:50051
      club: micros-club:50051
      consumable: micros-consumable:50051
      event: micros-event:50051
      feed: micros-feed:50051
      file: micros-file:50051
      notification: micros-notification:50051
      payment: micros-payment:50051
      user: micros-user:50051

    postgres:
      - master:
          username: devRW
          host: "127.0.0.1"
          port: 5432
          db_name: smallworld
          password: AMUHtZqzXa7V
          sslmode: disable
          debug: false

      - slave:
          username: devRW
          host: "127.0.0.1"
          port: 5432
          db_name: smallworld
          password: AMUHtZqzXa7V
          sslmode: disable
          debug: false

    db_max_idle_connections: 10
    db_max_open_connections: 30

    sendbird:
      api_origin: "https://api-6B076AE5-E263-4F8C-A4AC-53F455076B5A.sendbird.com"
      api_token: "564da7ab898cb06bd880d7f366cb257d0d1fe5a9"
      world_channel: "sendbird_open_channel_60318_9e99e241f5674927fdb4195f64489de888027fc1"

    redis:
      address: "10.59.177.11:6379"
      password: ""
      maxretries: 2
      db: 0    
    queues:
      - name: "async_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 4
      - name: "slack_incoming_webhook_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 1.45152e+07
        sleep: 1000
        number_of_workers: 1
      - name: "sendbird_webhook_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 2
      - name: "red_envelope_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 3
      - name: "push_notification_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 3
      - name: "gcs_pubsub_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 1
      - name: "udpate_user_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 4

    default_currency: "TWD"

    cloud_trace:
      enabled: false
      sampler_probability: 0.01

    payload_interceptor:
      enabled: true

    health_check_log:
      enabled: true

    apple_tester:
      feeds_to_be_seen:
      - 41
      - 42
      - 43
      - 44
      - 45
      - 46
      filter_enabled: false
      phone: "+886905310227"
      sms_code: "792857"
      user_uid: d225ecc6-fc07-4512-8cd4-a57f42400adb
      users_to_be_seen:
      - f90ecaf6-56e2-4794-9c83-aec2778cf03f
      - c06c2c6a-473b-447d-bc21-c62f361da969
      - edfa9c22-7ce1-4e42-aa0e-a77dec4e9505
      - 8bcea8d6-f467-4041-95a9-ffa5e90d7237
      - 2c5dc9f8-075b-4ee1-8df2-9410ba44d85a
      - 67a1d022-524f-43ef-9991-813decccbdf6
      - 02808330-b36f-4168-8fd0-6b9bd43cd299
      - d225ecc6-fc07-4512-8cd4-a57f42400adb
      - fc3082b7-9b86-47cb-ac27-31de1b52389d
      - 97667e33-5d6e-4ce5-a1e2-98d1eaa98cc4
      - 85c8eef0-9084-4a5b-b3a7-bd6791c3205b
      - bde79366-c15d-401d-bb7d-75b0f30e1cbe
      - 9472d66a-3d16-417a-a652-24be2128a9fc
      - 84ca7d65-ccae-4a6d-8db4-957e18a98a98

    firebase:
      remote_config:
        credential_filename: files/remoteconfig/sstar-dev-remoteconfig-credential.json
        is_get_setting_from_remote_config_enabled: true
        project_id: projects/sstar-mer-clients-dev
        scopes:
        - https://www.googleapis.com/auth/firebase.remoteconfig
---
# Source: sw-api/templates/micros-consumable/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: micros-consumable-secret
stringData:
  config.yaml: |-
    env: develop

    log:
      level: debug

    grpc:
      addr: "0.0.0.0"
      port: "50051"

    services:
      auth: micros-auth:50051
      bluffgame: micros-bluffgame:50051
      club: micros-club:50051
      consumable: micros-consumable:50051
      event: micros-event:50051
      feed: micros-feed:50051
      file: micros-file:50051
      notification: micros-notification:50051
      payment: micros-payment:50051
      user: micros-user:50051

    postgres:
      - master:
          username: devRW
          host: "127.0.0.1"
          port: 5432
          db_name: smallworld
          password: AMUHtZqzXa7V
          sslmode: disable
          debug: false

      - slave:
          username: devRW
          host: "127.0.0.1"
          port: 5432
          db_name: smallworld
          password: AMUHtZqzXa7V
          sslmode: disable
          debug: false

    db_max_idle_connections: 10
    db_max_open_connections: 30

    redis:
      address: "10.59.177.11:6379"
      password: ""
      maxretries: 2
      db: 0

    shumei:
       access_key: "R70VHnoozkudsc8rjgev"
       censor: "e98a7f42-d936-4b1d-8021-3363446538d4"
       callback_base_url: "https://api.dev.sw.sensestar.live"
       endpoints:
         text: 
           "int.dev.sw.sensestar.live": "http://api-text-xjp.fengkongcloud.com/v2/saas/anti_fraud/text"
         image: 
           "int.dev.sw.sensestar.live": "http://api-img-xjp.fengkongcloud.com/v2/saas/anti_fraud/img"
         audio: 
           "int.dev.sw.sensestar.live": "http://api-audio-sh.fengkongcloud.com/v2/saas/anti_fraud/audio"
         video: 
           "int.dev.sw.sensestar.live": "http://api-video-xjp.fengkongcloud.com/v2/saas/anti_fraud/video"    
    queues:
      - name: "async_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 4
      - name: "slack_incoming_webhook_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 1.45152e+07
        sleep: 1000
        number_of_workers: 1
      - name: "sendbird_webhook_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 2
      - name: "red_envelope_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 3
      - name: "push_notification_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 3
      - name: "gcs_pubsub_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 1
      - name: "udpate_user_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 4

    sendbird:
      api_origin: "https://api-6B076AE5-E263-4F8C-A4AC-53F455076B5A.sendbird.com"
      api_token: "564da7ab898cb06bd880d7f366cb257d0d1fe5a9"
      world_channel: "sendbird_open_channel_60318_9e99e241f5674927fdb4195f64489de888027fc1"

    default_currency: "TWD"

    avatar_look_limit: 3

    cloud_trace:
      enabled: false
      sampler_probability: 0.01

    payload_interceptor:
      enabled: true

    health_check_log:
      enabled: true

    apple_tester:
      feeds_to_be_seen:
      - 41
      - 42
      - 43
      - 44
      - 45
      - 46
      filter_enabled: false
      phone: "+886905310227"
      sms_code: "792857"
      user_uid: d225ecc6-fc07-4512-8cd4-a57f42400adb
      users_to_be_seen:
      - f90ecaf6-56e2-4794-9c83-aec2778cf03f
      - c06c2c6a-473b-447d-bc21-c62f361da969
      - edfa9c22-7ce1-4e42-aa0e-a77dec4e9505
      - 8bcea8d6-f467-4041-95a9-ffa5e90d7237
      - 2c5dc9f8-075b-4ee1-8df2-9410ba44d85a
      - 67a1d022-524f-43ef-9991-813decccbdf6
      - 02808330-b36f-4168-8fd0-6b9bd43cd299
      - d225ecc6-fc07-4512-8cd4-a57f42400adb
      - fc3082b7-9b86-47cb-ac27-31de1b52389d
      - 97667e33-5d6e-4ce5-a1e2-98d1eaa98cc4
      - 85c8eef0-9084-4a5b-b3a7-bd6791c3205b
      - bde79366-c15d-401d-bb7d-75b0f30e1cbe
      - 9472d66a-3d16-417a-a652-24be2128a9fc
      - 84ca7d65-ccae-4a6d-8db4-957e18a98a98

    firebase:
      remote_config:
        credential_filename: files/remoteconfig/sstar-dev-remoteconfig-credential.json
        is_get_setting_from_remote_config_enabled: true
        project_id: projects/sstar-mer-clients-dev
        scopes:
        - https://www.googleapis.com/auth/firebase.remoteconfig

    rabbitmq:
      enabled: true
      ip: porpoise.rmq.cloudamqp.com
      password: 3CR3_fMH1tjyYA_bW7NEVK7atMLkSwEL
      port: 5671
      scheme: amqps
      username: yjbzjrww
      vhost: yjbzjrww
---
# Source: sw-api/templates/micros-event/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: micros-event-secret
stringData:
  config.yaml: |-
    env: develop

    log:
      level: debug

    grpc:
      addr: "0.0.0.0"
      port: "50051"

    sendbird:
      api_origin: "https://api-6B076AE5-E263-4F8C-A4AC-53F455076B5A.sendbird.com"
      api_token: "564da7ab898cb06bd880d7f366cb257d0d1fe5a9"
      world_channel: "sendbird_open_channel_60318_9e99e241f5674927fdb4195f64489de888027fc1"

    services:
      auth: micros-auth:50051
      bluffgame: micros-bluffgame:50051
      club: micros-club:50051
      consumable: micros-consumable:50051
      event: micros-event:50051
      feed: micros-feed:50051
      file: micros-file:50051
      notification: micros-notification:50051
      payment: micros-payment:50051
      user: micros-user:50051

    postgres:
      - master:
          username: devRW
          host: "127.0.0.1"
          port: 5432
          db_name: smallworld
          password: AMUHtZqzXa7V
          sslmode: disable
          debug: false

      - slave:
          username: devRW
          host: "127.0.0.1"
          port: 5432
          db_name: smallworld
          password: AMUHtZqzXa7V
          sslmode: disable
          debug: false

    db_max_idle_connections: 10
    db_max_open_connections: 30

    redis:
      address: "10.59.177.11:6379"
      password: ""
      maxretries: 2
      db: 0    
    queues:
      - name: "async_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 4
      - name: "slack_incoming_webhook_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 1.45152e+07
        sleep: 1000
        number_of_workers: 1
      - name: "sendbird_webhook_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 2
      - name: "red_envelope_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 3
      - name: "push_notification_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 3
      - name: "gcs_pubsub_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 1
      - name: "udpate_user_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 4

    default_currency: "TWD"

    cloud_trace:
      enabled: false
      sampler_probability: 0.01

    payload_interceptor:
      enabled: true

    health_check_log:
      enabled: true

    apple_tester:
      feeds_to_be_seen:
      - 41
      - 42
      - 43
      - 44
      - 45
      - 46
      filter_enabled: false
      phone: "+886905310227"
      sms_code: "792857"
      user_uid: d225ecc6-fc07-4512-8cd4-a57f42400adb
      users_to_be_seen:
      - f90ecaf6-56e2-4794-9c83-aec2778cf03f
      - c06c2c6a-473b-447d-bc21-c62f361da969
      - edfa9c22-7ce1-4e42-aa0e-a77dec4e9505
      - 8bcea8d6-f467-4041-95a9-ffa5e90d7237
      - 2c5dc9f8-075b-4ee1-8df2-9410ba44d85a
      - 67a1d022-524f-43ef-9991-813decccbdf6
      - 02808330-b36f-4168-8fd0-6b9bd43cd299
      - d225ecc6-fc07-4512-8cd4-a57f42400adb
      - fc3082b7-9b86-47cb-ac27-31de1b52389d
      - 97667e33-5d6e-4ce5-a1e2-98d1eaa98cc4
      - 85c8eef0-9084-4a5b-b3a7-bd6791c3205b
      - bde79366-c15d-401d-bb7d-75b0f30e1cbe
      - 9472d66a-3d16-417a-a652-24be2128a9fc
      - 84ca7d65-ccae-4a6d-8db4-957e18a98a98

    firebase:
      remote_config:
        credential_filename: files/remoteconfig/sstar-dev-remoteconfig-credential.json
        is_get_setting_from_remote_config_enabled: true
        project_id: projects/sstar-mer-clients-dev
        scopes:
        - https://www.googleapis.com/auth/firebase.remoteconfig
---
# Source: sw-api/templates/micros-feed/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: micros-feed-secret
stringData:
  config.yaml: |-
    env: develop

    log:
      level: debug

    grpc:
      addr: "0.0.0.0"
      port: "50051"
    
    sendbird:
      api_origin: "https://api-6B076AE5-E263-4F8C-A4AC-53F455076B5A.sendbird.com"
      api_token: "564da7ab898cb06bd880d7f366cb257d0d1fe5a9"
      world_channel: "sendbird_open_channel_60318_9e99e241f5674927fdb4195f64489de888027fc1"

    services:
      auth: micros-auth:50051
      bluffgame: micros-bluffgame:50051
      club: micros-club:50051
      consumable: micros-consumable:50051
      event: micros-event:50051
      feed: micros-feed:50051
      file: micros-file:50051
      notification: micros-notification:50051
      payment: micros-payment:50051
      user: micros-user:50051

    postgres:
      - master:
          username: devRW
          host: "127.0.0.1"
          port: 5432
          db_name: smallworld
          password: AMUHtZqzXa7V
          sslmode: disable
          debug: false

      - slave:
          username: devRW
          host: "127.0.0.1"
          port: 5432
          db_name: smallworld
          password: AMUHtZqzXa7V
          sslmode: disable
          debug: false

    db_max_idle_connections: 10
    db_max_open_connections: 30

    redis:
      address: "10.59.177.11:6379"
      password: ""
      maxretries: 2
      db: 0    
    queues:
      - name: "async_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 4
      - name: "slack_incoming_webhook_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 1.45152e+07
        sleep: 1000
        number_of_workers: 1
      - name: "sendbird_webhook_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 2
      - name: "red_envelope_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 3
      - name: "push_notification_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 3
      - name: "gcs_pubsub_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 1
      - name: "udpate_user_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 4

    feed: 
      censor:
        enabled: "false"
    shumei:
      access_key: "R70VHnoozkudsc8rjgev"
      censor: "e98a7f42-d936-4b1d-8021-3363446538d4"
      callback_base_url: "https://api.dev.sw.sensestar.live"

    default_currency: "TWD"

    cloud_trace:
      enabled: false
      sampler_probability: 0.01

    payload_interceptor:
      enabled: true

    health_check_log:
      enabled: true

    apple_tester:
      feeds_to_be_seen:
      - 41
      - 42
      - 43
      - 44
      - 45
      - 46
      filter_enabled: false
      phone: "+886905310227"
      sms_code: "792857"
      user_uid: d225ecc6-fc07-4512-8cd4-a57f42400adb
      users_to_be_seen:
      - f90ecaf6-56e2-4794-9c83-aec2778cf03f
      - c06c2c6a-473b-447d-bc21-c62f361da969
      - edfa9c22-7ce1-4e42-aa0e-a77dec4e9505
      - 8bcea8d6-f467-4041-95a9-ffa5e90d7237
      - 2c5dc9f8-075b-4ee1-8df2-9410ba44d85a
      - 67a1d022-524f-43ef-9991-813decccbdf6
      - 02808330-b36f-4168-8fd0-6b9bd43cd299
      - d225ecc6-fc07-4512-8cd4-a57f42400adb
      - fc3082b7-9b86-47cb-ac27-31de1b52389d
      - 97667e33-5d6e-4ce5-a1e2-98d1eaa98cc4
      - 85c8eef0-9084-4a5b-b3a7-bd6791c3205b
      - bde79366-c15d-401d-bb7d-75b0f30e1cbe
      - 9472d66a-3d16-417a-a652-24be2128a9fc
      - 84ca7d65-ccae-4a6d-8db4-957e18a98a98

    recommendation:
      affinity:
        normal_score_scale: 10
        ordering_cache_enabled: false
        ordering_time_unit: 1440
        recalculation_period: 1
        temporal_score_scale: 50
      enabled: true
      gcp:
        catalog_parent: projects/339458420402/locations/global/catalogs/
        credential_file_path: /go/secrets/sstar-dev-recommendation-credential.json
        predict_placement_name: ""
        user_event_parent_suffix: /eventStores/

    firebase:
      remote_config:
        credential_filename: files/remoteconfig/sstar-dev-remoteconfig-credential.json
        is_get_setting_from_remote_config_enabled: true
        project_id: projects/sstar-mer-clients-dev
        scopes:
        - https://www.googleapis.com/auth/firebase.remoteconfig
---
# Source: sw-api/templates/micros-file/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: micros-file-secret
stringData:
  config.yaml: |-
    env: "develop"

    log:
      level: debug

    grpc:
      addr: "0.0.0.0"
      port: "50051"

    services:
      auth: micros-auth:50051
      bluffgame: micros-bluffgame:50051
      club: micros-club:50051
      consumable: micros-consumable:50051
      event: micros-event:50051
      feed: micros-feed:50051
      file: micros-file:50051
      notification: micros-notification:50051
      payment: micros-payment:50051
      user: micros-user:50051

    sendbird:
      api_origin: "https://api-6B076AE5-E263-4F8C-A4AC-53F455076B5A.sendbird.com"
      api_token: "564da7ab898cb06bd880d7f366cb257d0d1fe5a9"
      world_channel: "sendbird_open_channel_60318_9e99e241f5674927fdb4195f64489de888027fc1"

    postgres:
      - master:
          username: devRW
          host: "127.0.0.1"
          port: 5432
          db_name: smallworld
          password: AMUHtZqzXa7V
          sslmode: disable
          debug: false

      - slave:
          username: devRW
          host: "127.0.0.1"
          port: 5432
          db_name: smallworld
          password: AMUHtZqzXa7V
          sslmode: disable
          debug: false

    db_max_idle_connections: 10
    db_max_open_connections: 30

    redis:
      address: "10.59.177.11:6379"
      password: ""
      maxretries: 2
      db: 0    
    queues:
      - name: "async_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 4
      - name: "slack_incoming_webhook_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 1.45152e+07
        sleep: 1000
        number_of_workers: 1
      - name: "sendbird_webhook_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 2
      - name: "red_envelope_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 3
      - name: "push_notification_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 3
      - name: "gcs_pubsub_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 1
      - name: "udpate_user_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 4

    storeger:
      local:
        path: "/go/src/ismm/sw-micros/file"
        temp_path: "/go/src/ismm/file/temp/id-card"
      gcs:
        project_id: "sstar-sw-backend-dev"
        credential_file_path: "/go/secrets/sstar-dev-gcsfuse-credential.json"
        public_origin: "https://storage.googleapis.com"
        bucket_name: "int.dev.sw.sensestar.live"
        base_url: "int.dev.sw.sensestar.live"
        transcoder_pub_sub_topic: "projects/sstar-sw-backend-dev/topics/transcoder-api-result-notify-dev"
        location: "asia-east1"
      aliyun:
        scheme: "https"
        host: "oss-cn-hangzhou.aliyuncs.com"
        access_key_id: "LTAI4G1SRjTAgyDoE9aRibre"
        access_key_secret: "F6m5uhZmCrTy6cw710ypJtcXp3Xvgt"
        bucket_name: "int-dev-cn"

    lang_avatar_uploader:
      key: "6368616e6765207468697320706173736368616e676520746869732070617373"
      app_id: "123456"
      nonce: "123456789101123456789101"
      endpoint: "https://hanami-avatar-api.lang.live/upload_url"
      download_retry_times: 10

    cloud_trace:
      enabled: false
      sampler_probability: 0.01

    payload_interceptor:
      enabled: true

    health_check_log:
      enabled: true

    apple_tester:
      feeds_to_be_seen:
      - 41
      - 42
      - 43
      - 44
      - 45
      - 46
      filter_enabled: false
      phone: "+886905310227"
      sms_code: "792857"
      user_uid: d225ecc6-fc07-4512-8cd4-a57f42400adb
      users_to_be_seen:
      - f90ecaf6-56e2-4794-9c83-aec2778cf03f
      - c06c2c6a-473b-447d-bc21-c62f361da969
      - edfa9c22-7ce1-4e42-aa0e-a77dec4e9505
      - 8bcea8d6-f467-4041-95a9-ffa5e90d7237
      - 2c5dc9f8-075b-4ee1-8df2-9410ba44d85a
      - 67a1d022-524f-43ef-9991-813decccbdf6
      - 02808330-b36f-4168-8fd0-6b9bd43cd299
      - d225ecc6-fc07-4512-8cd4-a57f42400adb
      - fc3082b7-9b86-47cb-ac27-31de1b52389d
      - 97667e33-5d6e-4ce5-a1e2-98d1eaa98cc4
      - 85c8eef0-9084-4a5b-b3a7-bd6791c3205b
      - bde79366-c15d-401d-bb7d-75b0f30e1cbe
      - 9472d66a-3d16-417a-a652-24be2128a9fc
      - 84ca7d65-ccae-4a6d-8db4-957e18a98a98

    firebase:
      remote_config:
        credential_filename: files/remoteconfig/sstar-dev-remoteconfig-credential.json
        is_get_setting_from_remote_config_enabled: true
        project_id: projects/sstar-mer-clients-dev
        scopes:
        - https://www.googleapis.com/auth/firebase.remoteconfig
---
# Source: sw-api/templates/micros-notification/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: micros-notification-secret
stringData:
  config.yaml: |-
    env: develop

    log:
      level: debug

    grpc:
      addr: "0.0.0.0"
      port: "50051"

    services:
      auth: micros-auth:50051
      bluffgame: micros-bluffgame:50051
      club: micros-club:50051
      consumable: micros-consumable:50051
      event: micros-event:50051
      feed: micros-feed:50051
      file: micros-file:50051
      notification: micros-notification:50051
      payment: micros-payment:50051
      user: micros-user:50051

    sms:
      twilio:
        from: +14243720775
        account_sid: AC2788fc08ff8f4ebf7f7ade891148b824
        auth_token: bf314ea3bcf49d9ede9a745ca6651127
      mitake:
        url: https://smsapi.mitake.com.tw
        username: 85127084
        password: 8Ou9gS9zL0Ik

    sendbird:
      api_origin: "https://api-6B076AE5-E263-4F8C-A4AC-53F455076B5A.sendbird.com"
      api_token: "564da7ab898cb06bd880d7f366cb257d0d1fe5a9"
      world_channel: "sendbird_open_channel_60318_9e99e241f5674927fdb4195f64489de888027fc1"

    postgres:
      - master:
          username: devRW
          host: "127.0.0.1"
          port: 5432
          db_name: smallworld
          password: AMUHtZqzXa7V
          sslmode: disable
          debug: false

      - slave:
          username: devRW
          host: "127.0.0.1"
          port: 5432
          db_name: smallworld
          password: AMUHtZqzXa7V
          sslmode: disable
          debug: false

    db_max_idle_connections: 10
    db_max_open_connections: 30

    fcm:
      credential_file_path: "/go/secrets/sstar-dev-firebase-credential.json"

    slack:
      abnormal_transaction_webhook_url: "https://hooks.slack.com/services/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"
      dev_test_general_webhook_url: "https://hooks.slack.com/services/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"
      ops_ugc_abuse_webhook_url: "https://hooks.slack.com/services/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"
      daily_task_webhook_url: "https://hooks.slack.com/services/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"
      operation_team_channel_id: "C023LTAFJ72"
      backend_misc_channel_id: "C011CC6ER9P"
      backend_team_channel_id: "C01RBLE3JLC"

    official_icon: "https://cdn.iconscout.com/icon/premium/png-256-thumb/mermaid-6-846241.png"

    redis:
      address: "10.59.177.11:6379"
      password: ""
      maxretries: 2
      db: 0    
    queues:
      - name: "async_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 4
      - name: "slack_incoming_webhook_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 1.45152e+07
        sleep: 1000
        number_of_workers: 1
      - name: "sendbird_webhook_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 2
      - name: "red_envelope_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 3
      - name: "push_notification_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 3
      - name: "gcs_pubsub_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 1
      - name: "udpate_user_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 4

    shumei:
       access_key: "R70VHnoozkudsc8rjgev"
       censor: "e98a7f42-d936-4b1d-8021-3363446538d4"
       callback_base_url: "https://api.dev.sw.sensestar.live"
       endpoints:
         text:
           "int.dev.sw.sensestar.live": "http://api-text-xjp.fengkongcloud.com/v2/saas/anti_fraud/text"
         image:
           "int.dev.sw.sensestar.live": "http://api-img-xjp.fengkongcloud.com/v2/saas/anti_fraud/img"
         audio:
           "int.dev.sw.sensestar.live": "http://api-audio-sh.fengkongcloud.com/v2/saas/anti_fraud/audio"
         video:
           "int.dev.sw.sensestar.live": "http://api-video-xjp.fengkongcloud.com/v2/saas/anti_fraud/video"

    tencent:
      trtc_sdkappid: 1.400367425e+09
      sms_sdkappid: 1.400485492e+09
      key: "5aeecd19389711cfde5ee148e241502fe4efb7ba95097b0b2e2f9e2b8cc1868f"
      secretid: "AKIDg6Khtp9u5zbxc2G8pHSVm35uXibEIqvu"
      secretkey: "tXKyPaom8GFHm1zqSpwDH6dtsPTIpqfJ"

    getui:
      appid: "qZVYdOdKby6BOpM20glSX1"
      appkey: "C7k4zGJh9b5xYcecURECg9"
      mastersecret: "oEUTZ6R0Hr6Dw6pKw4DeWA"

    push_service_provider: "fcm"

    default_currency: "TWD"

    cloud_trace:
      enabled: false
      sampler_probability: 0.01

    payload_interceptor:
      enabled: true

    health_check_log:
      enabled: true

    push_notification:
      android_sound:
        sound_red_envelope: message_evelop_6
      ios_sound:
        sound_red_envelope: message_evelop_6.mp3

    apple_tester:
      feeds_to_be_seen:
      - 41
      - 42
      - 43
      - 44
      - 45
      - 46
      filter_enabled: false
      phone: "+886905310227"
      sms_code: "792857"
      user_uid: d225ecc6-fc07-4512-8cd4-a57f42400adb
      users_to_be_seen:
      - f90ecaf6-56e2-4794-9c83-aec2778cf03f
      - c06c2c6a-473b-447d-bc21-c62f361da969
      - edfa9c22-7ce1-4e42-aa0e-a77dec4e9505
      - 8bcea8d6-f467-4041-95a9-ffa5e90d7237
      - 2c5dc9f8-075b-4ee1-8df2-9410ba44d85a
      - 67a1d022-524f-43ef-9991-813decccbdf6
      - 02808330-b36f-4168-8fd0-6b9bd43cd299
      - d225ecc6-fc07-4512-8cd4-a57f42400adb
      - fc3082b7-9b86-47cb-ac27-31de1b52389d
      - 97667e33-5d6e-4ce5-a1e2-98d1eaa98cc4
      - 85c8eef0-9084-4a5b-b3a7-bd6791c3205b
      - bde79366-c15d-401d-bb7d-75b0f30e1cbe
      - 9472d66a-3d16-417a-a652-24be2128a9fc
      - 84ca7d65-ccae-4a6d-8db4-957e18a98a98

    private_chat_announcement_sender: "e869039a-69e6-49c4-8110-11502936108e"

    brands:
      brand_system_message_enabled: true
      system_brand_female_level_up_main_section_1_background_image: https://int.dev.sw.sensestar.live/assets/seeds/brand/system_brand_female_level_up_main_section_1_background_image.png
      system_brand_female_level_up_main_section_2_background_image: https://int.dev.sw.sensestar.live/assets/seeds/brand/system_brand_female_level_up_main_section_2_background_image.png
      system_brand_female_level_up_main_section_3_background_image: https://int.dev.sw.sensestar.live/assets/seeds/brand/system_brand_female_level_up_main_section_3_background_image.png
      system_brand_sign_female_background_image: https://int.dev.sw.sensestar.live/assets/seeds/brand/system_brand_sign_female_background_image.png

    firebase:
      remote_config:
        credential_filename: files/remoteconfig/sstar-dev-remoteconfig-credential.json
        is_get_setting_from_remote_config_enabled: true
        project_id: projects/sstar-mer-clients-dev
        scopes:
        - https://www.googleapis.com/auth/firebase.remoteconfig
---
# Source: sw-api/templates/micros-payment/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: micros-payment-secret
stringData:
  config.yaml: |-
    env: develop

    log:
      level: debug

    grpc:
      addr: "0.0.0.0"
      port: "50051"
    
    sendbird:
      api_origin: "https://api-6B076AE5-E263-4F8C-A4AC-53F455076B5A.sendbird.com"
      api_token: "564da7ab898cb06bd880d7f366cb257d0d1fe5a9"
      world_channel: "sendbird_open_channel_60318_9e99e241f5674927fdb4195f64489de888027fc1"

    services:
      auth: micros-auth:50051
      bluffgame: micros-bluffgame:50051
      club: micros-club:50051
      consumable: micros-consumable:50051
      event: micros-event:50051
      feed: micros-feed:50051
      file: micros-file:50051
      notification: micros-notification:50051
      payment: micros-payment:50051
      user: micros-user:50051

    env_vars:
      google_play_billing_credential_filename: sstar-dev-google-play-billing-credential.json
      google_play_iap_package_name: com.sstar.mytimes.dev
      appstore_password: 0d41aa39dd034a589ba34124209d0b95
      appstore_api_origin: https://sandbox.itunes.apple.com

    newebpay:
      merchant_id: MS39763085
      hash_key: u1Uf28HxXRrvxkob5DabmqoM2yHyrxdy
      hash_iv: C7oUA8tPvuacgvfP
      base_url: https://ccore.newebpay.com/API
      partner_code: ELT
      partner_id: elive_test
      merchant_hash_key: lDT3vS0NctZNvJnF9DwShgmZR7llOvU9
      merchant_hash_iv: C4d1BnIjw3AZTaVP
      merchant_base_url: https://int.hanami.vip/
      ezPay_merchant_id: 3.326526e+07
      ezPay_base_url: https://cinv.ezpay.com.tw/Api
      ezPay_hash_key: UVY4ZP7XJj4rkuPgUACMVzVU2PXuZWVY
      ezPay_hash_iv: CHnFmGJOxbxvtmVP
      allow_kiosk_print: false
      critical_info_hash_key: PdSgVkYp3s6v9y$B&E)H@MbQeThWmZq4
      critical_info_hash_iv: MbQeThWmZq4t7w!z

    alipay:
      production: false
      app_id: "2016103100781642"
      private_key: "MIIEowIBAAKCAQEAnesJoOKb2/SttwiXwAr5JZHC0bjm6A+SNan99xEZyjiHoHxYrjLKCQDe3WO09zElhq5y1x9zsPRE1P4Nc37SPUZ5oJWIOH21A9+Fk7DslOYbt4MqR1a61nkb5nGb/  ASgm2jryEHLe55A1XhlCj0tAJn8X0xyPQ/Pjgg4i7SgA61G+sESO31TXmjPYIvZIWb1ISYlA4mM7c4Sanq+JVrLx1pL3OCSwaEvs1nOMKWqZh492WnslCh+dbPY8AJaL766PO0Btnp8Bb1203BRbGvp74j6VM5g8dFkyz2HOCiuzkv8LS+XBcS4vtTQa/mEgvcU6UxUNHDzfbA7jn+IZKM8wQIDAQABAoIBAELclQMNbzg97J8mgDnLa5nAkWACjaGLljgqdWD6WJUKQkJs44896dTODY5m/OP8ZwsTKYRzyKQPiGU1+7P+6j0PbcfUCA0DDHVLWl8h9clFdE7KtkfmLM1KEcoMKCMYQngKgGoVkXYRlxnLE9y18ivjBrvCvkukOhjE2kwseeOT+TTO0QYI+3Br1gS+aC7dpquIo34jvji5lC3R45a7cHxouEBWeZ+GaYdAjoTafI3pzVblyxwjrfwahKHMbA0fMOQ8p3MgPMMT7EC8Y92FS9O5dpZObN4/DYQwmCw1k1q1tr6AXAj9wyeQQs3p9JihCnNjRikkweo6tOV6SHv7zwECgYEA70ihiPalt5jLaDDkHI+b3CiV+LtHLR/VIBsKw2t84sbC/1o/yIkTUo4IcEjGKeFHhPPYVptf6kB+066sZTHO/0yj4nqQ1cxJx/5KAG9ZYYzbXFlMfmP9wjuWA8MCy5AXBSZwS+GHGYGNU0QfBR6LWNdLvSWOSTNRjxGqUYbDklkCgYEAqPNB/Lt3+k5P9PbbUbjSBXAjGFQmNqcdZh6FaEl3scvFWTIBbBkvkMbmOC1j3LNHUmi7YQjGH6sb/j2ZSfdyywiqJPTD+Mi0h1b4cI91RjU87eF7I6VMT9SSGyklvnwCsFqjJkyiLtGjD8pVNzjSl+af7ORYeFUaX5QzTOCQoKkCgYEA07P/7wzBm4lc1YcEG1zXedaSsWkIVR0n0+r4/+LWsFFIbuHrMsJMTSsKvkU0xhLh0vhm/GElYDzFuQV+011ZFbk5+gOUpwPCd2Y9FNtvSgZ0geUj72MKPVG4rQVZML8ADvduPUSA4gkj/3pys3XNtcFt6iATHiKAU0M+3DiOSakCgYBXUzSePv+qfuPRB+8gdFkJuoZJQuVlhkcpy0jFOIQHf/2HNtOJXhM5z7SbAMsG/hs1OzDu3KwbHkQfyxL6Kk5JJzdaVrEcXBEDiy5qb5v8J/RQOCV/rSaedI74PvJlXI+/O3nsh9ukO3L+7GPTYSlonim3NeeMeuBg2qcRa1kV0QKBgC5VcOYyi8faUfm2wmNWEBdQLS2YdvWM +XFLMbGUxbaSJuTjrMMmQS2Lj/oMYClBq3LUcL/IDQo78Yqh3LlwEG8axZyKqHiaMUE+Fh5jF77ro8FF8yIwbmLhsApn0uL8NuV9QEOFva+K0tMccmvDYfEwa9wqVdUuBuGoxvWqkvb5"
      app_public_cert: "/go/secrets/sstar-dev-alipay-appCertPublicKey.crt"
      alipay_root_cert: "/go/secrets/sstar-dev-alipay-alipayRootCert.crt"
      alipay_public_cert: "/go/secrets/sstar-dev-alipay-alipayCertPublicKey_RSA2.crt"
      notify_url: "https://api.dev.sw.sensestar.live/v1/payment/alipay/notify.txt"
      
    wxpay:
      app_id: "wxbcdf122964ca3b3d"
      mch_id: "1434613402"
      api_key: "vCN0pcdRHIj0fcCXytKGc2GEaLtSBeYW"
      certificate_file: "/go/secrets/sstar-dev-wxpay-credential.p12"
      connect_timeout: 10000
      read_timeout: 10000
      trade_type: "APP"
      sandbox: false
      notify_url: "https://api.dev.sw.sensestar.live/v1/payment/wxpay/notify.xml"

    furui:
      host: "https://fr.staging.baifotong.com"
      username: "hanami"
      password: "Hnm0908"
      debug: true

    postgres:
      - master:
          username: devRW
          host: "127.0.0.1"
          port: 5432
          db_name: smallworld
          password: AMUHtZqzXa7V
          sslmode: disable
          debug: false

      - slave:
          username: devRW
          host: "127.0.0.1"
          port: 5432
          db_name: smallworld
          password: AMUHtZqzXa7V
          sslmode: disable
          debug: false
    
    db_max_idle_connections: 10
    db_max_open_connections: 30

    redis:
      address: "10.59.177.11:6379"
      password: ""
      maxretries: 2
      db: 0    
    queues:
      - name: "async_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 4
      - name: "slack_incoming_webhook_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 1.45152e+07
        sleep: 1000
        number_of_workers: 1
      - name: "sendbird_webhook_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 2
      - name: "red_envelope_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 3
      - name: "push_notification_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 3
      - name: "gcs_pubsub_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 1
      - name: "udpate_user_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 4

    default_currency: "TWD"

    cloud_trace:
      enabled: false
      sampler_probability: 0.01

    payload_interceptor:
      enabled: true

    health_check_log:
      enabled: true

    apple_tester:
      feeds_to_be_seen:
      - 41
      - 42
      - 43
      - 44
      - 45
      - 46
      filter_enabled: false
      phone: "+886905310227"
      sms_code: "792857"
      user_uid: d225ecc6-fc07-4512-8cd4-a57f42400adb
      users_to_be_seen:
      - f90ecaf6-56e2-4794-9c83-aec2778cf03f
      - c06c2c6a-473b-447d-bc21-c62f361da969
      - edfa9c22-7ce1-4e42-aa0e-a77dec4e9505
      - 8bcea8d6-f467-4041-95a9-ffa5e90d7237
      - 2c5dc9f8-075b-4ee1-8df2-9410ba44d85a
      - 67a1d022-524f-43ef-9991-813decccbdf6
      - 02808330-b36f-4168-8fd0-6b9bd43cd299
      - d225ecc6-fc07-4512-8cd4-a57f42400adb
      - fc3082b7-9b86-47cb-ac27-31de1b52389d
      - 97667e33-5d6e-4ce5-a1e2-98d1eaa98cc4
      - 85c8eef0-9084-4a5b-b3a7-bd6791c3205b
      - bde79366-c15d-401d-bb7d-75b0f30e1cbe
      - 9472d66a-3d16-417a-a652-24be2128a9fc
      - 84ca7d65-ccae-4a6d-8db4-957e18a98a98

    iap_tester:
      test_product_uids:
        "1": DEV_HANAMI_COIN_10_001
        "2": dev_hanami_gp_coin_10_001
        "3": DEV_HANAMI_NEWBPAY_COIN_1_001
      tester_uids:
      - e98a7f42-d936-4b1d-8021-3363446538d4

    firebase:
      remote_config:
        credential_filename: files/remoteconfig/sstar-dev-remoteconfig-credential.json
        is_get_setting_from_remote_config_enabled: true
        project_id: projects/sstar-mer-clients-dev
        scopes:
        - https://www.googleapis.com/auth/firebase.remoteconfig
---
# Source: sw-api/templates/micros-user/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: micros-user-secret
stringData:
  config.yaml: |-
    env: develop

    log:
      level: debug

    grpc:
      addr: "0.0.0.0"
      port: "50051"

    services:
      auth: micros-auth:50051
      bluffgame: micros-bluffgame:50051
      club: micros-club:50051
      consumable: micros-consumable:50051
      event: micros-event:50051
      feed: micros-feed:50051
      file: micros-file:50051
      notification: micros-notification:50051
      payment: micros-payment:50051
      user: micros-user:50051

    sendbird:
      api_origin: "https://api-6B076AE5-E263-4F8C-A4AC-53F455076B5A.sendbird.com"
      api_token: "564da7ab898cb06bd880d7f366cb257d0d1fe5a9"
      world_channel: "sendbird_open_channel_60318_9e99e241f5674927fdb4195f64489de888027fc1"

    postgres:
      - master:
          username: devRW
          host: "127.0.0.1"
          port: 5432
          db_name: smallworld
          password: AMUHtZqzXa7V
          sslmode: disable
          debug: false

      - slave:
          username: devRW
          host: "127.0.0.1"
          port: 5432
          db_name: smallworld
          password: AMUHtZqzXa7V
          sslmode: disable
          debug: false

    db_max_idle_connections: 10
    db_max_open_connections: 30

    redis:
      address: "10.59.177.11:6379"
      password: ""
      maxretries: 2
      db: 0    
    queues:
      - name: "async_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 4
      - name: "slack_incoming_webhook_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 1.45152e+07
        sleep: 1000
        number_of_workers: 1
      - name: "sendbird_webhook_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 2
      - name: "red_envelope_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 3
      - name: "push_notification_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 3
      - name: "gcs_pubsub_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 1
      - name: "udpate_user_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 4

    shumei:
       access_key: "R70VHnoozkudsc8rjgev"
       censor: "e98a7f42-d936-4b1d-8021-3363446538d4"
       callback_base_url: "https://api.dev.sw.sensestar.live"
       endpoints:
         text: 
           "int.dev.sw.sensestar.live": "http://api-text-xjp.fengkongcloud.com/v2/saas/anti_fraud/text"
         image: 
           "int.dev.sw.sensestar.live": "http://api-img-xjp.fengkongcloud.com/v2/saas/anti_fraud/img"
         audio: 
           "int.dev.sw.sensestar.live": "http://api-audio-sh.fengkongcloud.com/v2/saas/anti_fraud/audio"
         video: 
           "int.dev.sw.sensestar.live": "http://api-video-xjp.fengkongcloud.com/v2/saas/anti_fraud/video"


    tencent:
      trtc_sdkappid: 1.400367425e+09
      sms_sdkappid: 1.400485492e+09
      key: "5aeecd19389711cfde5ee148e241502fe4efb7ba95097b0b2e2f9e2b8cc1868f"
      secretid: "AKIDg6Khtp9u5zbxc2G8pHSVm35uXibEIqvu"
      secretkey: "tXKyPaom8GFHm1zqSpwDH6dtsPTIpqfJ"

    default_currency: "TWD"

    cloud_trace:
      enabled: false
      sampler_probability: 0.01

    payload_interceptor:
      enabled: true

    health_check_log:
      enabled: true

    apple_tester:
      feeds_to_be_seen:
      - 41
      - 42
      - 43
      - 44
      - 45
      - 46
      filter_enabled: false
      phone: "+886905310227"
      sms_code: "792857"
      user_uid: d225ecc6-fc07-4512-8cd4-a57f42400adb
      users_to_be_seen:
      - f90ecaf6-56e2-4794-9c83-aec2778cf03f
      - c06c2c6a-473b-447d-bc21-c62f361da969
      - edfa9c22-7ce1-4e42-aa0e-a77dec4e9505
      - 8bcea8d6-f467-4041-95a9-ffa5e90d7237
      - 2c5dc9f8-075b-4ee1-8df2-9410ba44d85a
      - 67a1d022-524f-43ef-9991-813decccbdf6
      - 02808330-b36f-4168-8fd0-6b9bd43cd299
      - d225ecc6-fc07-4512-8cd4-a57f42400adb
      - fc3082b7-9b86-47cb-ac27-31de1b52389d
      - 97667e33-5d6e-4ce5-a1e2-98d1eaa98cc4
      - 85c8eef0-9084-4a5b-b3a7-bd6791c3205b
      - bde79366-c15d-401d-bb7d-75b0f30e1cbe
      - 9472d66a-3d16-417a-a652-24be2128a9fc
      - 84ca7d65-ccae-4a6d-8db4-957e18a98a98

    area_codes:
      country_code_map:
        CN: "+86"
        HK: "+852"
        SG: "+65"
        TW: "+886"
      i18n:
        en_latn:
          CN: China
          HK: Hong Kong
          SG: Singapore
          TW: Taiwan
        zh_hans:
          CN: 中国
          HK: 香港
          SG: 新加坡
          TW: 台湾
        zh_hant:
          CN: 中國
          HK: 香港
          SG: 新加坡
          TW: 台灣
      order:
      - TW
      - CN
      - HK
      - SG

    activeness_levels:
      icons:
        active: https://int.dev.sw.sensestar.live/assets/seeds/activeness/active.png
        fanatic: https://int.dev.sw.sensestar.live/assets/seeds/activeness/fanatic.png

    brands:
      brand_system_message_enabled: true
      default_cover_img: https://int.dev.sw.sensestar.live/assets/seeds/brand/system_brand_cover.png

    firebase:
      remote_config:
        credential_filename: files/remoteconfig/sstar-dev-remoteconfig-credential.json
        is_get_setting_from_remote_config_enabled: true
        project_id: projects/sstar-mer-clients-dev
        scopes:
        - https://www.googleapis.com/auth/firebase.remoteconfig

    online_user:
      switch:
        use_cache: true
      ttl:
        online_user_list: 60

    income_grades:
      - frame_url: https://int.dev.sw.sensestar.live/assets/seeds/grade/frame_gold_v2.png
        min_score: 50000

    gcs_base_url: "https://int.dev.sw.sensestar.live"
    
    cities:
      - latitude: 25.032969
        longitude: 121.565414
        name: TPE
      - latitude: 22.396427
        longitude: 114.109497
        name: HKG
      - latitude: 35.689487
        longitude: 139.691711
        name: TYO
    
    servers_custom_sorted_enabled: true

    leaderboard_socket_push_period: 30

    rabbitmq:
      enabled: true
      ip: porpoise.rmq.cloudamqp.com
      password: 3CR3_fMH1tjyYA_bW7NEVK7atMLkSwEL
      port: 5671
      scheme: amqps
      username: yjbzjrww
      vhost: yjbzjrww
---
# Source: sw-api/templates/bluffgame-fe/configMap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: bluffgame-fe-config
data:
  config.yaml: |-
    app:
      env: develop
      addr: "0.0.0.0"
      port: "80"
      chunk_size: 128

    log:
      level: debug
---
# Source: sw-api/templates/client-api/configMap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: client-api-config
data:
  config.yaml: |-
    log:
      level: debug

    app:
      env: develop
      addr: "0.0.0.0"
      port: "8080"
      chunk_size: 128

    redis:
      address: "10.59.177.11:6379"
      password: ""
      maxretries: 2
      db: 0

    services:
      auth: micros-auth:50051
      bluffgame: micros-bluffgame:50051
      club: micros-club:50051
      consumable: micros-consumable:50051
      event: micros-event:50051
      feed: micros-feed:50051
      file: micros-file:50051
      notification: micros-notification:50051
      payment: micros-payment:50051
      user: micros-user:50051
    
    min_version: "0.0.9_18026"

    rateLimit:
      reqsPerHour: 40000
      reqsPerMinute: 5000
      reqsPerSecond: 1000

    cloud_trace:
      enabled: false
      sampler_probability: 0.01

    rabbitmq:
      enabled: true
      ip: porpoise.rmq.cloudamqp.com
      password: 3CR3_fMH1tjyYA_bW7NEVK7atMLkSwEL
      port: 5671
      scheme: amqps
      username: yjbzjrww
      vhost: yjbzjrww
---
# Source: sw-api/templates/micros-worker/configMap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: micros-worker-config
data:
  config.yaml: |-
    env: "develop"

    log:
      level: debug

    # the number of workers to deal
    # with incoming message from the queue.
    # each worker is a go-routine.
    number_of_workers: 4

    # list of grpc clients to communicate with the micro services
    services:
      auth: micros-auth:50051
      bluffgame: micros-bluffgame:50051
      club: micros-club:50051
      consumable: micros-consumable:50051
      event: micros-event:50051
      feed: micros-feed:50051
      file: micros-file:50051
      notification: micros-notification:50051
      payment: micros-payment:50051
      user: micros-user:50051    
    queues:
      - name: "async_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 4
      - name: "slack_incoming_webhook_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 1.45152e+07
        sleep: 1000
        number_of_workers: 1
      - name: "sendbird_webhook_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 2
      - name: "red_envelope_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 3
      - name: "push_notification_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 3
      - name: "gcs_pubsub_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 1
      - name: "udpate_user_tasks_develop"
        consume_tag: "general_tasks"
        broker: "redis://10.59.177.11:6379"
        result_backend: "redis://10.59.177.11:6379"
        results_expire_in: 3.6e+06
        sleep: 0
        number_of_workers: 4

    cloud_trace:
      enabled: false
      sampler_probability: 0.01
---
# Source: sw-api/templates/official-web/configMap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: official-web-config
data:
  config.yaml: |-
    app:
      env: develop
      addr: "0.0.0.0"
      port: "80"
      chunk_size: 128

    log:
      level: debug
---
# Source: sw-api/templates/bluffgame-fe/svc.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: develop
  name: bluffgame-fe
  labels: 
    app: bluffgame-fe
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  selector:
    app: bluffgame-fe
        
    release: "sw-api"
  type: NodePort
  ports:
  - name: bluffgame-fe
    port: 8081
    targetPort: 80
    protocol: TCP
---
# Source: sw-api/templates/client-api/svc.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: develop
  name: client-api
  labels: 
    app: client-api
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
  annotations:
    cloud.google.com/backend-config: '{"ports": {"8080":"client-api-backendconfig"}}'
    cloud.google.com/neg: '{"ingress": true}'
spec:
  selector:
    app: client-api
        
    release: "sw-api"
  type: NodePort
  ports:
  - name: client-api
    port: 8080
    targetPort: 8080
    protocol: TCP
---
# Source: sw-api/templates/micros-auth/svc.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: develop
  name: micros-auth
  labels: 
    app: micros-auth
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  selector:
    app: micros-auth
        
    release: "sw-api"
  type: ClusterIP
  ports:
  - name: "grpc-micros-auth"
    port: 50051
    targetPort: 50051
    protocol: TCP
---
# Source: sw-api/templates/micros-bluffgame/svc.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: develop
  name: micros-bluffgame
  labels: 
    app: micros-bluffgame
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  selector:
    app: micros-bluffgame
        
    release: "sw-api"
  type: ClusterIP
  ports:
  - name: "grpc-micros-bluffgame"
    port: 50051
    targetPort: 50051
    protocol: TCP
---
# Source: sw-api/templates/micros-club/svc.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: develop
  name: micros-club
  labels: 
    app: micros-club
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  selector:
    app: micros-club
        
    release: "sw-api"
  type: ClusterIP
  ports:
  - name: "grpc-micros-club"
    port: 50051
    targetPort: 50051
    protocol: TCP
---
# Source: sw-api/templates/micros-consumable/svc.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: develop
  name: micros-consumable
  labels: 
    app: micros-consumable
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  selector:
    app: micros-consumable
        
    release: "sw-api"
  type: ClusterIP
  ports:
  - name: "grpc-micros-consumable"
    port: 50051
    targetPort: 50051
    protocol: TCP
---
# Source: sw-api/templates/micros-event/svc.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: develop
  name: micros-event
  labels: 
    app: micros-event
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  selector:
    app: micros-event
        
    release: "sw-api"
  type: ClusterIP
  ports:
  - name: "grpc-micros-event"
    port: 50051
    targetPort: 50051
    protocol: TCP
---
# Source: sw-api/templates/micros-feed/svc.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: develop
  name: micros-feed
  labels: 
    app: micros-feed
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  selector:
    app: micros-feed
        
    release: "sw-api"
  type: ClusterIP
  ports:
  - name: "grpc-micros-feed"
    port: 50051
    targetPort: 50051
    protocol: TCP
---
# Source: sw-api/templates/micros-file/svc.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: develop
  name: micros-file
  labels: 
    app: micros-file
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  selector:
    app: micros-file
        
    release: "sw-api"
  type: ClusterIP
  ports:
  - name: "grpc-micros-file"
    port: 50051
    targetPort: 50051
    protocol: TCP
---
# Source: sw-api/templates/micros-notification/svc.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: develop
  name: micros-notification
  labels: 
    app: micros-notification
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  selector:
    app: micros-notification
        
    release: "sw-api"
  type: ClusterIP
  ports:
  - name: "grpc-micros-notification"
    port: 50051
    targetPort: 50051
    protocol: TCP
---
# Source: sw-api/templates/micros-payment/svc.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: develop
  name: micros-payment
  labels: 
    app: micros-payment
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  selector:
    app: micros-payment
        
    release: "sw-api"
  type: ClusterIP
  ports:
  - name: "grpc-micros-user"
    port: 50051
    targetPort: 50051
    protocol: TCP
---
# Source: sw-api/templates/micros-user/svc.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: develop
  name: micros-user
  labels: 
    app: micros-user
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  selector:
    app: micros-user
        
    release: "sw-api"
  type: ClusterIP
  ports:
  - name: "grpc-micros-user"
    port: 50051
    targetPort: 50051
    protocol: TCP
---
# Source: sw-api/templates/official-web/svc.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: develop
  name: official-web
  labels: 
    app: official-web
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  selector:
    app: official-web
        
    release: "sw-api"
  type: NodePort
  ports:
  - name: official-web
    port: 8081
    targetPort: 80
    protocol: TCP
---
# Source: sw-api/templates/bluffgame-fe/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: develop
  name: bluffgame-fe
  labels:
    app: bluffgame-fe
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  replicas: 0
  selector:
    matchLabels: 
      app: bluffgame-fe
            
      release: "sw-api"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels: 
        app: bluffgame-fe
                
        release: "sw-api"
        heritage: "Helm"
        chart: "sw-api-1.13.43"
        env: "develop"
    spec:
      containers:
      - name: bluffgame-fe
        image: "gcr.io/sstar-sw-backend-dev/gitlab.com/sstar/sw-bluffgame-fe:v1.0.10-221"
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 128Mi
        volumeMounts:
        - name: bluffgame-fe-config
          mountPath: "/go/config.yaml"
          subPath: config.yaml
        env:
        - name: CONFIG_PATH
          value: /go/config.yaml
        - name: API_DOMAIN
          value: https://api.dev.sw.sensestar.live
        - name: WS_DOMAIN
          value: https://api.dev.sw.sensestar.live
        - name: COMPONENT_NAME
          value: bluffgame-fe
        - name: IMAGE_TAG
          value: v1.0.10-221
        ports:
        - containerPort: 80
          protocol: TCP
          name: bluffgame-fe
        livenessProbe:
          periodSeconds: 30
          timeoutSeconds: 5
          initialDelaySeconds: 5
          httpGet:
            path: /
            port: 80
        readinessProbe:
          periodSeconds: 30
          timeoutSeconds: 5
          initialDelaySeconds: 5
          httpGet:
            path: /
            port: 80
      volumes:
      - name: bluffgame-fe-config
        configMap:
          name: bluffgame-fe-config
          items:
          - key: config.yaml
            path: config.yaml
            mode: 0644
---
# Source: sw-api/templates/client-api/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: develop
  name: client-api
  labels:
    app: client-api
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  replicas: 1
  selector:
    matchLabels: 
      app: client-api
            
      release: "sw-api"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels: 
        app: client-api
                
        release: "sw-api"
        heritage: "Helm"
        chart: "sw-api-1.13.43"
        env: "develop"
    spec:
      containers:
      - name: client-api
        image: "gcr.io/sstar-sw-backend-dev/gitlab.com/sstar/sw-client-api:v1.2.10-1028"
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - name: client-api-config
          mountPath: "/go/config.yaml"
          subPath: config.yaml
        env:
        - name: CONFIG_PATH
          value: /go/config.yaml
        - name: COMPONENT_NAME
          value: client-api
        - name: IMAGE_TAG
          value: v1.2.10-1028
        ports:
        - containerPort: 8080
          protocol: TCP
          name: client-api
        livenessProbe:
          periodSeconds: 30
          timeoutSeconds: 5
          initialDelaySeconds: 5
          httpGet:
            path: /health
            port: 8080
        readinessProbe:
          periodSeconds: 30
          timeoutSeconds: 5
          initialDelaySeconds: 5
          httpGet:
            path: /health
            port: 8080
      volumes:
      - name: client-api-config
        configMap:
          name: client-api-config
          items:
          - key: config.yaml
            path: config.yaml
            mode: 0644
---
# Source: sw-api/templates/micros-auth/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: develop
  name: micros-auth
  labels: 
    app: micros-auth
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  replicas: 1
  selector:
    matchLabels: 
      app: micros-auth
            
      release: "sw-api"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels: 
        app: micros-auth
                
        release: "sw-api"
        heritage: "Helm"
        chart: "sw-api-1.13.43"
        env: "develop"
    spec:
      containers:
      - name: micros-auth
        image: "gcr.io/sstar-sw-backend-dev/gitlab.com/sstar/sw-micros-auth:v1.2.10-646"
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 128Mi
        volumeMounts:
        - name: micros-auth-secret
          mountPath: "/go/config.yaml"
          subPath: config.yaml
          readOnly: true
        - name: remoteconfig-credential
          mountPath: "files/remoteconfig/sstar-dev-remoteconfig-credential.json"
          subPath: "sstar-develop-remoteconfig-credential.json"
          readOnly: true
        env:
        - name: CONFIG_PATH
          value: /go/config.yaml
        - name: COMPONENT_NAME
          value: micros-auth
        - name: IMAGE_TAG
          value: v1.2.10-646
        ports:
        - containerPort: 50051
          protocol: TCP
          name: micros-auth
        livenessProbe:
          periodSeconds: 30
          timeoutSeconds: 5
          initialDelaySeconds: 5
          exec:
            command: 
            - "/bin/grpc_health_probe" 
            - "-addr=:50051"
        readinessProbe:
          periodSeconds: 30
          timeoutSeconds: 5
          initialDelaySeconds: 5
          exec:
            command: 
            - "/bin/grpc_health_probe" 
            - "-addr=:50051"
      - name: cloudsql-proxy
        image: "gcr.io/cloudsql-docker/gce-proxy:1.11"
        imagePullPolicy: IfNotPresent
        command: ["/cloud_sql_proxy",
                  "-instances=sstar-sw-backend-dev:us-east4:sstar-dev-pgsql-v11=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: cloudsql-credential
          mountPath: /secrets/cloudsql/credentials.json
          subPath: "sstar-develop-cloudsql-credential.json"
          readOnly: true
      volumes:
      - name: micros-auth-secret
        secret:
          secretName: micros-auth-secret
          items:
          - key: config.yaml
            path: config.yaml
            mode: 0644
      - name: remoteconfig-credential
        secret:
          secretName: remoteconfig-credential
          items:
          - key: "sstar-develop-remoteconfig-credential.json"
            path: "sstar-develop-remoteconfig-credential.json"
            mode: 0644
      - name: cloudsql-credential
        secret:
          secretName: cloudsql-credential
          items:
          - key: "sstar-develop-cloudsql-credential.json"
            path: "sstar-develop-cloudsql-credential.json"
            mode: 0644
---
# Source: sw-api/templates/micros-bluffgame/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: develop
  name: micros-bluffgame
  labels: 
    app: micros-bluffgame
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  replicas: 0
  selector:
    matchLabels: 
      app: micros-bluffgame
            
      release: "sw-api"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels: 
        app: micros-bluffgame
                
        release: "sw-api"
        heritage: "Helm"
        chart: "sw-api-1.13.43"
        env: "develop"
    spec:
      containers:
      - name: micros-bluffgame
        image: "gcr.io/sstar-sw-backend-dev/gitlab.com/sstar/sw-micros-bluffgame:v1.2.10-239"
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 128Mi
        volumeMounts:
        - name: micros-bluffgame-secret
          mountPath: "/go/config.yaml"
          subPath: config.yaml
          readOnly: true
        env:
        - name: CONFIG_PATH
          value: /go/config.yaml
        - name: COMPONENT_NAME
          value: micros-bluffgame
        - name: IMAGE_TAG
          value: v1.2.10-239
        ports:
        - containerPort: 50051
          protocol: TCP
          name: micros-bluffgam
        livenessProbe:
          periodSeconds: 30
          timeoutSeconds: 5
          initialDelaySeconds: 5
          exec:
            command: 
            - "/bin/grpc_health_probe" 
            - "-addr=:50051"
        readinessProbe:
          periodSeconds: 30
          timeoutSeconds: 5
          initialDelaySeconds: 5
          exec:
            command: 
            - "/bin/grpc_health_probe" 
            - "-addr=:50051"
      - name: cloudsql-proxy
        image: "gcr.io/cloudsql-docker/gce-proxy:1.11"
        imagePullPolicy: IfNotPresent
        command: ["/cloud_sql_proxy",
                  "-instances=sstar-sw-backend-dev:us-east4:sstar-dev-pgsql-v11=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: cloudsql-credential
          mountPath: /secrets/cloudsql/credentials.json
          subPath: "sstar-develop-cloudsql-credential.json"
          readOnly: true
      volumes:
      - name: micros-bluffgame-secret
        secret:
          secretName: micros-bluffgame-secret
          items:
          - key: config.yaml
            path: config.yaml
            mode: 0644
      - name: cloudsql-credential
        secret:
          secretName: cloudsql-credential
          items:
          - key: "sstar-develop-cloudsql-credential.json"
            path: "sstar-develop-cloudsql-credential.json"
            mode: 0644
---
# Source: sw-api/templates/micros-club/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: develop
  name: micros-club
  labels: 
    app: micros-club
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  replicas: 0
  selector:
    matchLabels: 
      app: micros-club
            
      release: "sw-api"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels: 
        app: micros-club
                
        release: "sw-api"
        heritage: "Helm"
        chart: "sw-api-1.13.43"
        env: "develop"
    spec:
      containers:
      - name: micros-club
        image: "gcr.io/sstar-sw-backend-dev/gitlab.com/sstar/sw-micros-club:v1.2.10-294"
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 128Mi
        volumeMounts:
        - name: micros-club-secret
          mountPath: "/go/config.yaml"
          subPath: config.yaml
          readOnly: true
        - name: remoteconfig-credential
          mountPath: "files/remoteconfig/sstar-dev-remoteconfig-credential.json"
          subPath: "sstar-develop-remoteconfig-credential.json"
          readOnly: true
        env:
        - name: CONFIG_PATH
          value: /go/config.yaml
        - name: COMPONENT_NAME
          value: micros-club
        - name: IMAGE_TAG
          value: v1.2.10-294
        ports:
        - containerPort: 50051
          protocol: TCP
          name: micros-club
        livenessProbe:
          periodSeconds: 30
          timeoutSeconds: 5
          initialDelaySeconds: 5
          exec:
            command: 
            - "/bin/grpc_health_probe" 
            - "-addr=:50051"
        readinessProbe:
          periodSeconds: 30
          timeoutSeconds: 5
          initialDelaySeconds: 5
          exec:
            command: 
            - "/bin/grpc_health_probe" 
            - "-addr=:50051"
      - name: cloudsql-proxy
        image: "gcr.io/cloudsql-docker/gce-proxy:1.11"
        imagePullPolicy: IfNotPresent
        command: ["/cloud_sql_proxy",
                  "-instances=sstar-sw-backend-dev:us-east4:sstar-dev-pgsql-v11=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: cloudsql-credential
          mountPath: /secrets/cloudsql/credentials.json
          subPath: "sstar-develop-cloudsql-credential.json"
          readOnly: true
      volumes:
      - name: micros-club-secret
        secret:
          secretName: micros-club-secret
          items:
          - key: config.yaml
            path: config.yaml
            mode: 0644
      - name: remoteconfig-credential
        secret:
          secretName: remoteconfig-credential
          items:
          - key: "sstar-develop-remoteconfig-credential.json"
            path: "sstar-develop-remoteconfig-credential.json"
            mode: 0644
      - name: cloudsql-credential
        secret:
          secretName: cloudsql-credential
          items:
          - key: "sstar-develop-cloudsql-credential.json"
            path: "sstar-develop-cloudsql-credential.json"
            mode: 0644
---
# Source: sw-api/templates/micros-consumable/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: develop
  name: micros-consumable
  labels: 
    app: micros-consumable
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  replicas: 1
  selector:
    matchLabels: 
      app: micros-consumable
            
      release: "sw-api"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels: 
        app: micros-consumable
                
        release: "sw-api"
        heritage: "Helm"
        chart: "sw-api-1.13.43"
        env: "develop"
    spec:
      containers:
      - name: micros-consumable
        image: "gcr.io/sstar-sw-backend-dev/gitlab.com/sstar/sw-micros-consumable:v1.2.10-675"
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 128Mi
        volumeMounts:
        - name: micros-consumable-secret
          mountPath: "/go/config.yaml"
          subPath: config.yaml
          readOnly: true
        - name: remoteconfig-credential
          mountPath: "files/remoteconfig/sstar-dev-remoteconfig-credential.json"
          subPath: "sstar-develop-remoteconfig-credential.json"
          readOnly: true
        env:
        - name: CONFIG_PATH
          value: /go/config.yaml
        - name: COMPONENT_NAME
          value: micros-consumable
        - name: IMAGE_TAG
          value: v1.2.10-675
        ports:
        - containerPort: 50051
          protocol: TCP
          name: micros-consumab
        livenessProbe:
          periodSeconds: 30
          timeoutSeconds: 5
          initialDelaySeconds: 5
          exec:
            command: 
            - "/bin/grpc_health_probe" 
            - "-addr=:50051"
        readinessProbe:
          periodSeconds: 30
          timeoutSeconds: 5
          initialDelaySeconds: 5
          exec:
            command: 
            - "/bin/grpc_health_probe" 
            - "-addr=:50051"
      - name: cloudsql-proxy
        image: "gcr.io/cloudsql-docker/gce-proxy:1.11"
        imagePullPolicy: IfNotPresent
        command: ["/cloud_sql_proxy",
                  "-instances=sstar-sw-backend-dev:us-east4:sstar-dev-pgsql-v11=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: cloudsql-credential
          mountPath: /secrets/cloudsql/credentials.json
          subPath: "sstar-develop-cloudsql-credential.json"
          readOnly: true
      volumes:
      - name: micros-consumable-secret
        secret:
          secretName: micros-consumable-secret
          items:
          - key: config.yaml
            path: config.yaml
            mode: 0644
      - name: remoteconfig-credential
        secret:
          secretName: remoteconfig-credential
          items:
          - key: "sstar-develop-remoteconfig-credential.json"
            path: "sstar-develop-remoteconfig-credential.json"
            mode: 0644
      - name: cloudsql-credential
        secret:
          secretName: cloudsql-credential
          items:
          - key: "sstar-develop-cloudsql-credential.json"
            path: "sstar-develop-cloudsql-credential.json"
            mode: 0644
---
# Source: sw-api/templates/micros-event/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: develop
  name: micros-event
  labels: 
    app: micros-event
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  replicas: 0
  selector:
    matchLabels: 
      app: micros-event
            
      release: "sw-api"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels: 
        app: micros-event
                
        release: "sw-api"
        heritage: "Helm"
        chart: "sw-api-1.13.43"
        env: "develop"
    spec:
      containers:
      - name: micros-event
        image: "gcr.io/sstar-sw-backend-dev/gitlab.com/sstar/sw-micros-event:v1.2.10-302"
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 128Mi
        volumeMounts:
        - name: micros-event-secret
          mountPath: "/go/config.yaml"
          subPath: config.yaml
          readOnly: true
        - name: remoteconfig-credential
          mountPath: "files/remoteconfig/sstar-dev-remoteconfig-credential.json"
          subPath: "sstar-develop-remoteconfig-credential.json"
          readOnly: true
        env:
        - name: CONFIG_PATH
          value: /go/config.yaml
        - name: COMPONENT_NAME
          value: micros-event
        - name: IMAGE_TAG
          value: v1.2.10-302
        ports:
        - containerPort: 50051
          protocol: TCP
          name: micros-event
        livenessProbe:
          periodSeconds: 30
          timeoutSeconds: 5
          initialDelaySeconds: 5
          exec:
            command: 
            - "/bin/grpc_health_probe" 
            - "-addr=:50051"
        readinessProbe:
          periodSeconds: 30
          timeoutSeconds: 5
          initialDelaySeconds: 5
          exec:
            command: 
            - "/bin/grpc_health_probe" 
            - "-addr=:50051"
      - name: cloudsql-proxy
        image: "gcr.io/cloudsql-docker/gce-proxy:1.11"
        imagePullPolicy: IfNotPresent
        command: ["/cloud_sql_proxy",
                  "-instances=sstar-sw-backend-dev:us-east4:sstar-dev-pgsql-v11=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: cloudsql-credential
          mountPath: /secrets/cloudsql/credentials.json
          subPath: "sstar-develop-cloudsql-credential.json"
          readOnly: true
      volumes:
      - name: micros-event-secret
        secret:
          secretName: micros-event-secret
          items:
          - key: config.yaml
            path: config.yaml
            mode: 0644
      - name: remoteconfig-credential
        secret:
          secretName: remoteconfig-credential
          items:
          - key: "sstar-develop-remoteconfig-credential.json"
            path: "sstar-develop-remoteconfig-credential.json"
            mode: 0644
      - name: cloudsql-credential
        secret:
          secretName: cloudsql-credential
          items:
          - key: "sstar-develop-cloudsql-credential.json"
            path: "sstar-develop-cloudsql-credential.json"
            mode: 0644
---
# Source: sw-api/templates/micros-feed/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: develop
  name: micros-feed
  labels: 
    app: micros-feed
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  replicas: 1
  selector:
    matchLabels: 
      app: micros-feed
            
      release: "sw-api"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels: 
        app: micros-feed
                
        release: "sw-api"
        heritage: "Helm"
        chart: "sw-api-1.13.43"
        env: "develop"
    spec:
      containers:
      - name: micros-feed
        image: "gcr.io/sstar-sw-backend-dev/gitlab.com/sstar/sw-micros-feed:v1.2.10-566"
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 128Mi
        volumeMounts:
        - name: micros-feed-secret
          mountPath: "/go/config.yaml"
          subPath: config.yaml
          readOnly: true
        - name: gcprecommendation-credential
          mountPath: "/go/secrets/sstar-dev-recommendation-credential.json"
          subPath: "sstar-develop-gcprecommendation-credential.json"
          readOnly: true
        - name: remoteconfig-credential
          mountPath: "files/remoteconfig/sstar-dev-remoteconfig-credential.json"
          subPath: "sstar-develop-remoteconfig-credential.json"
          readOnly: true
        env:
        - name: CONFIG_PATH
          value: /go/config.yaml
        - name: COMPONENT_NAME
          value: micros-feed
        - name: IMAGE_TAG
          value: v1.2.10-566
        ports:
        - containerPort: 50051
          protocol: TCP
          name: micros-feed
        livenessProbe:
          periodSeconds: 30
          timeoutSeconds: 5
          initialDelaySeconds: 5
          exec:
            command: 
            - "/bin/grpc_health_probe" 
            - "-addr=:50051"
        readinessProbe:
          periodSeconds: 30
          timeoutSeconds: 5
          initialDelaySeconds: 5
          exec:
            command: 
            - "/bin/grpc_health_probe" 
            - "-addr=:50051"
      - name: cloudsql-proxy
        image: "gcr.io/cloudsql-docker/gce-proxy:1.11"
        imagePullPolicy: IfNotPresent
        command: ["/cloud_sql_proxy",
                  "-instances=sstar-sw-backend-dev:us-east4:sstar-dev-pgsql-v11=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: cloudsql-credential
          mountPath: /secrets/cloudsql/credentials.json
          subPath: "sstar-develop-cloudsql-credential.json"
          readOnly: true
      volumes:
      - name: micros-feed-secret
        secret:
          secretName: micros-feed-secret
          items:
          - key: config.yaml
            path: config.yaml
            mode: 0644
      - name: gcprecommendation-credential
        secret:
          secretName: gcprecommendation-credential
          items:
          - key: "sstar-develop-gcprecommendation-credential.json"
            path: "sstar-develop-gcprecommendation-credential.json"
            mode: 0644
      - name: remoteconfig-credential
        secret:
          secretName: remoteconfig-credential
          items:
          - key: "sstar-develop-remoteconfig-credential.json"
            path: "sstar-develop-remoteconfig-credential.json"
            mode: 0644
      - name: cloudsql-credential
        secret:
          secretName: cloudsql-credential
          items:
          - key: "sstar-develop-cloudsql-credential.json"
            path: "sstar-develop-cloudsql-credential.json"
            mode: 0644
---
# Source: sw-api/templates/micros-file/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: develop
  name: micros-file
  labels: 
    app: micros-file
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  replicas: 1
  selector:
    matchLabels: 
      app: micros-file
            
      release: "sw-api"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels: 
        app: micros-file
                
        release: "sw-api"
        heritage: "Helm"
        chart: "sw-api-1.13.43"
        env: "develop"
    spec:
      containers:
      - name: micros-file
        image: "gcr.io/sstar-sw-backend-dev/gitlab.com/sstar/sw-micros-file:v1.2.10-446"
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 2000m
            memory: 2048Mi
          requests:
            cpu: 1000m
            memory: 1024Mi
        volumeMounts:
        - name: micros-file-secret
          mountPath: "/go/config.yaml"
          subPath: "config.yaml"
          readOnly: true
        - name: gcsfuse-credential
          mountPath: "/go/secrets/sstar-dev-gcsfuse-credential.json"
          subPath: "sstar-develop-gcsfuse-credential.json"
          readOnly: true
        - name: remoteconfig-credential
          mountPath: "files/remoteconfig/sstar-dev-remoteconfig-credential.json"
          subPath: "sstar-develop-remoteconfig-credential.json"
          readOnly: true
        env:
        - name: CONFIG_PATH
          value: /go/config.yaml
        - name: COMPONENT_NAME
          value: micros-file
        - name: IMAGE_TAG
          value: v1.2.10-446
        ports:
        - containerPort: 50051
          protocol: TCP
          name: micros-file
        livenessProbe:
          periodSeconds: 30
          timeoutSeconds: 5
          initialDelaySeconds: 5
          exec:
            command: 
            - "/bin/grpc_health_probe" 
            - "-addr=:50051"
        readinessProbe:
          periodSeconds: 30
          timeoutSeconds: 5
          initialDelaySeconds: 5
          exec:
            command: 
            - "/bin/grpc_health_probe" 
            - "-addr=:50051"
      - name: cloudsql-proxy
        image: "gcr.io/cloudsql-docker/gce-proxy:1.11"
        imagePullPolicy: IfNotPresent
        command: ["/cloud_sql_proxy",
                  "-instances=sstar-sw-backend-dev:us-east4:sstar-dev-pgsql-v11=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: cloudsql-credential
          mountPath: /secrets/cloudsql/credentials.json
          subPath: "sstar-develop-cloudsql-credential.json"
          readOnly: true
      volumes:
        - name: micros-file-secret
          secret:
            secretName: micros-file-secret
            items:
            - key: config.yaml
              path: config.yaml
              mode: 0644
        - name: gcsfuse-credential
          secret:
            secretName: gcsfuse-credential
            items:
            - key: "sstar-develop-gcsfuse-credential.json"
              path: "sstar-develop-gcsfuse-credential.json"
              mode: 0644
        - name: remoteconfig-credential
          secret:
            secretName: remoteconfig-credential
            items:
            - key: "sstar-develop-remoteconfig-credential.json"
              path: "sstar-develop-remoteconfig-credential.json"
              mode: 0644
        - name: cloudsql-credential
          secret:
            secretName: cloudsql-credential
            items:
            - key: "sstar-develop-cloudsql-credential.json"
              path: "sstar-develop-cloudsql-credential.json"
              mode: 0644
---
# Source: sw-api/templates/micros-notification/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: develop
  name: micros-notification
  labels: 
    app: micros-notification
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  replicas: 1
  selector:
    matchLabels: 
      app: micros-notification
            
      release: "sw-api"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels: 
        app: micros-notification
                
        release: "sw-api"
        heritage: "Helm"
        chart: "sw-api-1.13.43"
        env: "develop"
    spec:
      containers:
      - name: micros-notification
        image: "gcr.io/sstar-sw-backend-dev/gitlab.com/sstar/sw-micros-notification:v1.2.10-927"
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 128Mi
        volumeMounts:
        - name: micros-notification-secret
          mountPath: "/go/config.yaml"
          subPath: config.yaml
          readOnly: true
        - name: firebase-credential
          mountPath: /go/secrets/sstar-dev-firebase-credential.json
          subPath: "sstar-develop-firebase-credential.json"
          readOnly: true
        - name: remoteconfig-credential
          mountPath: "files/remoteconfig/sstar-dev-remoteconfig-credential.json"
          subPath: "sstar-develop-remoteconfig-credential.json"
          readOnly: true
        env:
        - name: CONFIG_PATH
          value: /go/config.yaml
        - name: COMPONENT_NAME
          value: micros-notification
        - name: IMAGE_TAG
          value: v1.2.10-927
        ports:
        - containerPort: 50051
          protocol: TCP
          name: micros-notifica
        livenessProbe:
          periodSeconds: 30
          timeoutSeconds: 5
          initialDelaySeconds: 5
          exec:
            command: 
            - "/bin/grpc_health_probe" 
            - "-addr=:50051"
        readinessProbe:
          periodSeconds: 30
          timeoutSeconds: 5
          initialDelaySeconds: 5
          exec:
            command: 
            - "/bin/grpc_health_probe" 
            - "-addr=:50051"
      - name: cloudsql-proxy
        image: "gcr.io/cloudsql-docker/gce-proxy:1.11"
        imagePullPolicy: IfNotPresent
        command: ["/cloud_sql_proxy",
                  "-instances=sstar-sw-backend-dev:us-east4:sstar-dev-pgsql-v11=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: cloudsql-credential
          mountPath: /secrets/cloudsql/credentials.json
          subPath: "sstar-develop-cloudsql-credential.json"
          readOnly: true
      volumes:
      - name: micros-notification-secret
        secret:
          secretName: micros-notification-secret
          items:
          - key: config.yaml
            path: config.yaml
            mode: 0644
      - name: firebase-credential
        secret:
          secretName: firebase-credential
          items:
          - key: "sstar-develop-firebase-credential.json"
            path: "sstar-develop-firebase-credential.json"
            mode: 0644
      - name: remoteconfig-credential
        secret:
          secretName: remoteconfig-credential
          items:
          - key: "sstar-develop-remoteconfig-credential.json"
            path: "sstar-develop-remoteconfig-credential.json"
            mode: 0644
      - name: cloudsql-credential
        secret:
          secretName: cloudsql-credential
          items:
          - key: "sstar-develop-cloudsql-credential.json"
            path: "sstar-develop-cloudsql-credential.json"
            mode: 0644
---
# Source: sw-api/templates/micros-payment/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: develop
  name: micros-payment
  labels: 
    app: micros-payment
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  replicas: 1
  selector:
    matchLabels: 
      app: micros-payment
            
      release: "sw-api"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels: 
        app: micros-payment
                
        release: "sw-api"
        heritage: "Helm"
        chart: "sw-api-1.13.43"
        env: "develop"
    spec:
      containers:
      - name:  micros-payment
        image: "gcr.io/sstar-sw-backend-dev/gitlab.com/sstar/sw-micros-payment:v1.2.10-587"
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 128Mi
        volumeMounts:
        - name:  micros-payment-secret
          mountPath: "/go/config.yaml"
          subPath: config.yaml
          readOnly: true
        - name: google-play-billing-credential
          mountPath: /go/secrets/sstar-dev-google-play-billing-credential.json
          subPath: "sstar-develop-google-play-billing-credential.json"
          readOnly: true
        - name: wxpay-credential
          mountPath: /go/secrets/sstar-dev-wxpay-credential.p12
          subPath: "sstar-develop-wxpay-credential.p12"
          readOnly: true
        - name: alipay-credential
          mountPath: /go/secrets/sstar-dev-alipay-appCertPublicKey.crt
          subPath: "sstar-develop-alipay-appCertPublicKey.crt"
          readOnly: true
        - name: alipay-credential  
          mountPath: /go/secrets/sstar-dev-alipay-alipayRootCert.crt
          subPath: "sstar-develop-alipay-alipayRootCert.crt"
          readOnly: true
        - name: alipay-credential 
          mountPath: /go/secrets/sstar-dev-alipay-alipayCertPublicKey_RSA2.crt
          subPath: "sstar-develop-alipay-alipayCertPublicKey_RSA2.crt"
          readOnly: true
        - name: remoteconfig-credential
          mountPath: "files/remoteconfig/sstar-dev-remoteconfig-credential.json"
          subPath: "sstar-develop-remoteconfig-credential.json"
          readOnly: true

        env:
        - name: CONFIG_PATH
          value: /go/config.yaml
        - name: COMPONENT_NAME
          value: micros-payment
        - name: IMAGE_TAG
          value: v1.2.10-587
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /go/secrets/sstar-dev-google-play-billing-credential.json
        - name: WXPAY_CREDENTIALS
          value: /go/secrets/sstar-dev-wxpay-credential.p12
        - name: ALIPAY_CREDENTIALS-app-public-cert
          value: /go/secrets/sstar-dev-alipay-appCertPublicKey.crt
        - name: ALIPAY_CREDENTIALS-alipay-root-cert
          value: /go/secrets/sstar-dev-alipay-alipayRootCert.crt
        - name: ALIPAY_CREDENTIALS-alipay-public-cert  
          value: /go/secrets/sstar-dev-alipay-alipayCertPublicKey_RSA2.crt
          
        ports:
        - containerPort: 50051
          protocol: TCP
          name: micros-payment
        livenessProbe:
          periodSeconds: 30
          timeoutSeconds: 5
          initialDelaySeconds: 5
          exec:
            command: 
            - "/bin/grpc_health_probe" 
            - "-addr=:50051"
        readinessProbe:
          periodSeconds: 30
          timeoutSeconds: 5
          initialDelaySeconds: 5
          exec:
            command: 
            - "/bin/grpc_health_probe" 
            - "-addr=:50051"
      - name: cloudsql-proxy
        image: "gcr.io/cloudsql-docker/gce-proxy:1.11"
        imagePullPolicy: IfNotPresent
        command: ["/cloud_sql_proxy",
                  "-instances=sstar-sw-backend-dev:us-east4:sstar-dev-pgsql-v11=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: cloudsql-credential
          mountPath: /secrets/cloudsql/credentials.json
          subPath: "sstar-develop-cloudsql-credential.json"
          readOnly: true
      volumes:
      - name:  micros-payment-secret
        secret:
          secretName:  micros-payment-secret
          items:
          - key: config.yaml
            path: config.yaml
            mode: 0644
      - name: google-play-billing-credential
        secret:
          secretName: google-play-billing-credential
          items:
          - key: "sstar-develop-google-play-billing-credential.json"
            path: "sstar-develop-google-play-billing-credential.json"
            mode: 0644
      - name: remoteconfig-credential
        secret:
          secretName: remoteconfig-credential
          items:
          - key: "sstar-develop-remoteconfig-credential.json"
            path: "sstar-develop-remoteconfig-credential.json"
            mode: 0644
      - name: cloudsql-credential
        secret:
          secretName: cloudsql-credential
          items:
          - key: "sstar-develop-cloudsql-credential.json"
            path: "sstar-develop-cloudsql-credential.json"
            mode: 0644
      - name: wxpay-credential
        secret:
          secretName: wxpay-credential
          items:
          - key: "sstar-develop-wxpay-credential.p12"
            path: "sstar-develop-wxpay-credential.p12"
            mode: 0644
      - name: alipay-credential
        secret:
          secretName: alipay-credential
          items:
          - key: "sstar-develop-alipay-appCertPublicKey.crt"
            path: "sstar-develop-alipay-appCertPublicKey.crt"
            mode: 0644
          - key: "sstar-develop-alipay-alipayRootCert.crt"
            path: "sstar-develop-alipay-alipayRootCert.crt"
            mode: 0644
          - key: "sstar-develop-alipay-alipayCertPublicKey_RSA2.crt"
            path: "sstar-develop-alipay-alipayCertPublicKey_RSA2.crt"
            mode: 0644
---
# Source: sw-api/templates/micros-user/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: develop
  name: micros-user
  labels: 
    app: micros-user
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  replicas: 1
  selector:
    matchLabels: 
      app: micros-user
            
      release: "sw-api"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels: 
        app: micros-user
                
        release: "sw-api"
        heritage: "Helm"
        chart: "sw-api-1.13.43"
        env: "develop"
    spec:
      containers:
      - name: micros-user
        image: "gcr.io/sstar-sw-backend-dev/gitlab.com/sstar/sw-micros-user:v1.2.10-1333"
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 128Mi
        volumeMounts:
        - name: micros-user-secret
          mountPath: "/go/config.yaml"
          subPath: config.yaml
          readOnly: true
        - name: remoteconfig-credential
          mountPath: "files/remoteconfig/sstar-dev-remoteconfig-credential.json"
          subPath: "sstar-develop-remoteconfig-credential.json"
          readOnly: true
        env:
        - name: CONFIG_PATH
          value: /go/config.yaml
        - name: COMPONENT_NAME
          value: micros-user
        - name: IMAGE_TAG
          value: v1.2.10-1333
        ports:
        - containerPort: 50051
          protocol: TCP
          name: micros-user
        livenessProbe:
          periodSeconds: 30
          timeoutSeconds: 5
          initialDelaySeconds: 5
          exec:
            command: 
            - "/bin/grpc_health_probe" 
            - "-addr=:50051"
        readinessProbe:
          periodSeconds: 30
          timeoutSeconds: 5
          initialDelaySeconds: 5
          exec:
            command: 
            - "/bin/grpc_health_probe" 
            - "-addr=:50051"
      - name: cloudsql-proxy
        image: "gcr.io/cloudsql-docker/gce-proxy:1.11"
        imagePullPolicy: IfNotPresent
        command: ["/cloud_sql_proxy",
                  "-instances=sstar-sw-backend-dev:us-east4:sstar-dev-pgsql-v11=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: cloudsql-credential
          mountPath: /secrets/cloudsql/credentials.json
          subPath: "sstar-develop-cloudsql-credential.json"
          readOnly: true
      volumes:
      - name: micros-user-secret
        secret:
          secretName: micros-user-secret
          items:
          - key: config.yaml
            path: config.yaml
            mode: 0644
      - name: remoteconfig-credential
        secret:
          secretName: remoteconfig-credential
          items:
          - key: "sstar-develop-remoteconfig-credential.json"
            path: "sstar-develop-remoteconfig-credential.json"
            mode: 0644
      - name: cloudsql-credential
        secret:
          secretName: cloudsql-credential
          items:
          - key: "sstar-develop-cloudsql-credential.json"
            path: "sstar-develop-cloudsql-credential.json"
            mode: 0644
---
# Source: sw-api/templates/micros-worker/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: develop
  name: micros-worker
  labels: 
    app: micros-worker
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  replicas: 1
  selector:
    matchLabels: 
      app: micros-worker
            
      release: "sw-api"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels: 
        app: micros-worker
                
        release: "sw-api"
        heritage: "Helm"
        chart: "sw-api-1.13.43"
        env: "develop"
    spec:
      containers:
      - name: micros-worker
        image: "gcr.io/sstar-sw-backend-dev/gitlab.com/sstar/sw-micros-worker:v1.2.10-444"
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 128Mi
        volumeMounts:
        - name: micros-worker-config
          mountPath: "/go/config.yaml"
          subPath: config.yaml
        env:
        - name: CONFIG_PATH
          value: /go/config.yaml
        - name: COMPONENT_NAME
          value: micros-worker
        - name: IMAGE_TAG
          value: v1.2.10-444
        # livenessProbe:
        #   periodSeconds: 30
        #   timeoutSeconds: 5
        #   initialDelaySeconds: 5
        #   exec:
        #     command: 
        #     - "/bin/health_probe"
        # readinessProbe:
        #   periodSeconds: 30
        #   timeoutSeconds: 5
        #   initialDelaySeconds: 5
        #   exec:
        #     command: 
        #     - "/bin/health_probe"
      volumes:
        - name: micros-worker-config
          configMap:
            name: micros-worker-config
            items:
            - key: config.yaml
              path: config.yaml
              mode: 0644
---
# Source: sw-api/templates/official-web/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: develop
  name: official-web
  labels:
    app: official-web
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  replicas: 0
  selector:
    matchLabels: 
      app: official-web
            
      release: "sw-api"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels: 
        app: official-web
                
        release: "sw-api"
        heritage: "Helm"
        chart: "sw-api-1.13.43"
        env: "develop"
    spec:
      containers:
      - name: official-web
        image: "gcr.io/sstar-sw-backend-dev/gitlab.com/sstar/sw-official-web:v1.2.10-260"
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - name: official-web-config
          mountPath: "/go/config.yaml"
          subPath: config.yaml
        env:
        - name: ENV
          value: develop
        - name: CONFIG_PATH
          value: /go/config.yaml
        - name: COMPONENT_NAME
          value: official-web
        - name: IMAGE_TAG
          value: v1.2.10-260
        - name: API_DOMAIN
          value: https://api.dev.sw.sensestar.live
        - name: WS_DOMAIN
          value: https://api.dev.sw.sensestar.live
        - name: PAYMENT_NEWEBPAY_URL
          value: https://ccore.newebpay.com/MPG/mpg_gateway
        - name: PAYMENT_NEWEBPAY_MERCHANT_ID
          value: MS39763085
        - name: RESIZE_IMAGE_SERVICE_URL
          value: https://asia-east2-sstar-sw-backend-dev.cloudfunctions.net/image-proxy-dev
        ports:
        - containerPort: 80
          protocol: TCP
          name: official-web
        livenessProbe:
          periodSeconds: 30
          timeoutSeconds: 5
          initialDelaySeconds: 5
          httpGet:
            path: /tw
            port: 80
        readinessProbe:
          periodSeconds: 30
          timeoutSeconds: 5
          initialDelaySeconds: 5
          httpGet:
            path: /tw
            port: 80
      volumes:
      - name: official-web-config
        configMap:
          name: official-web-config
          items:
          - key: config.yaml
            path: config.yaml
            mode: 0644
---
# Source: sw-api/templates/bluffgame-fe/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: bluffgame-fe
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: bluffgame-fe 
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
---
# Source: sw-api/templates/client-api/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: client-api
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: client-api 
  minReplicas: 1 
  maxReplicas: 2 
  targetCPUUtilizationPercentage: 60
---
# Source: sw-api/templates/micros-auth/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: micros-auth
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: micros-auth 
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
---
# Source: sw-api/templates/micros-bluffgame/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: micros-bluffgame
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: micros-bluffgame 
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
---
# Source: sw-api/templates/micros-club/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: micros-club
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: micros-club 
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
---
# Source: sw-api/templates/micros-consumable/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: micros-consumable
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: micros-consumable 
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
---
# Source: sw-api/templates/micros-event/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: micros-event
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: micros-event 
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: micros-event
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: micros-event 
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
---
# Source: sw-api/templates/micros-feed/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: micros-feed
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: micros-feed 
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
---
# Source: sw-api/templates/micros-file/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: micros-file
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: micros-file 
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
---
# Source: sw-api/templates/micros-notification/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: micros-notification
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: micros-notification 
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
---
# Source: sw-api/templates/micros-payment/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: micros-payment
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: micros-payment 
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
---
# Source: sw-api/templates/micros-user/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: micros-user
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: micros-user 
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
---
# Source: sw-api/templates/micros-worker/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: micros-worker
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: micros-worker 
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
---
# Source: sw-api/templates/official-web/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: official-web
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: official-web 
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
---
# Source: sw-api/templates/bluffgame-fe/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.allow-http: "true"
    kubernetes.io/ingress.class: gce
    kubernetes.io/ingress.global-static-ip-name: bluffgame-fe-dev-ip-address
    networking.gke.io/managed-certificates: bluffgame-fe-dev-certificate
  namespace: develop
  name: bluffgame-fe
  labels: 
    app: bluffgame-fe
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  rules:
  - http:
      paths:
      - path: /*
        backend:
          serviceName: bluffgame-fe
          servicePort: 8081
---
# Source: sw-api/templates/client-api/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.allow-http: "true"
    kubernetes.io/ingress.class: gce
    kubernetes.io/ingress.global-static-ip-name: client-api-develop-ip-address
    networking.gke.io/managed-certificates: client-api-dev-certificate
  namespace: develop
  name: client-api
  labels: 
    app: client-api
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  rules:
  - http:
      paths:
      - path: /docs/*
        pathType: Prefix
        backend:
          service:
            name: swagger
            port: 
              number: 8080
      - path: /*
        pathType: Prefix
        backend:
          service:
            name: client-api
            port: 
              number: 8080
---
# Source: sw-api/templates/official-web/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.allow-http: "true"
    kubernetes.io/ingress.class: gce
    kubernetes.io/ingress.global-static-ip-name: official-web-develop-ip-address
    networking.gke.io/managed-certificates: official-web-dev-certificate
  namespace: develop
  name: official-web
  labels: 
    app: official-web
        
    release: "sw-api"
    heritage: "Helm"
    chart: "sw-api-1.13.43"
    env: "develop"
spec:
  rules:
  - http:
      paths:
      - path: /*
        backend:
          serviceName: official-web
          servicePort: 8081
---
# Source: sw-api/templates/client-api/backendConfig.yaml
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: client-api-backendconfig
spec:
  timeoutSec: 43200
  connectionDraining:
    drainingTimeoutSec: 300
  sessionAffinity:
    affinityType: GENERATED_COOKIE
    affinityCookieTtlSec: 350
---
# Source: sw-api/templates/client-api/ip.yaml
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeAddress
metadata:
  name: client-api-develop-ip-address
spec:
  location: global
---
# Source: sw-api/templates/official-web/ip.yaml
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeAddress
metadata:
  name: official-web-develop-ip-address
spec:
  location: global
---
# Source: sw-api/templates/bluffgame-fe/certificate.yaml
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: bluffgame-fe-dev-certificate
spec:
  domains:
    - bluff.dev.sw.sensestar.live
---
# Source: sw-api/templates/client-api/certificate.yaml
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: client-api-dev-certificate
spec:
  domains:
    - api.dev.sw.sensestar.live
---
# Source: sw-api/templates/official-web/certificate.yaml
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: official-web-dev-certificate
spec:
  domains:
    - www.dev.sw.sensestar.live

---
# Source: cashout-web/templates/configMap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cashout-web-config
data:
  default.conf: |-
   server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri /index.html;
    }
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
    location /api/ {
        proxy_pass http://client-api:8080/;
        proxy_set_header X-Real_IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr:$remote_port;
        proxy_http_version 1.1;
    }
   }
---
# Source: cashout-web/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: develop
  name: cashout-web
  labels:     
    app: "cashout-web"
    release: "cashout-web"
    heritage: "Helm"
    chart: "cashout-web-1.1.30"
  annotations:
    cloud.google.com/backend-config: '{"ports": {"8080":"cashout-web-backendconfig"}}'
spec:
  selector:
        
    app: "cashout-web"
    release: "cashout-web"
  type: NodePort
  ports:
  - name: cashout-web
    port: 8080
    targetPort: 80
    protocol: TCP
---
# Source: cashout-web/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: develop
  name: cashout-web
  labels:     
    app: "cashout-web"
    release: "cashout-web"
    heritage: "Helm"
    chart: "cashout-web-1.1.30"
spec:
  replicas: 0
  selector:
    matchLabels:       
      app: "cashout-web"
      release: "cashout-web"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:         
        app: "cashout-web"
        release: "cashout-web"
        heritage: "Helm"
        chart: "cashout-web-1.1.30"
    spec:
      containers:
      - name: cashout-web
        image: "gcr.io/sstar-sw-backend-dev/gitlab.com/sstar/sw-cashout-web:v1.2.10-143"
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 50m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
        volumeMounts:
        - name: cashout-web-config
          mountPath: "/etc/nginx/conf.d/default.conf"
          subPath: default.conf
        env:
        - name: API_HOST
          value: "https://api.dev.sw.sensestar.live"
        - name: PORT
          value: "8080"
        ports:
        - name: cashout-web
          containerPort: 80
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: cashout-web-config
        configMap:
          name: cashout-web-config
          items:
          - key: default.conf
            path: default.conf
---
# Source: cashout-web/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.allow-http: "true"
    kubernetes.io/ingress.class: gce
    kubernetes.io/ingress.global-static-ip-name: cashout-web-develop-ip-address
    networking.gke.io/managed-certificates: cashout-web-develop-certificate
  namespace: develop
  name: cashout-web
  labels:
    app: cashout-web
        
    app: "cashout-web"
    release: "cashout-web"
    heritage: "Helm"
    chart: "cashout-web-1.1.30"
spec:
  rules:
  - http:
      paths:
      - path: /*
        backend:
          serviceName: cashout-web
          servicePort: 8080
---
# Source: cashout-web/templates/backend-config.yaml
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  namespace: "develop"
  name: cashout-web-backendconfig
spec:
  securityPolicy:
    name: "ap-backend-armor-policy"
---
# Source: cashout-web/templates/ip.yaml
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeAddress
metadata:
  name: cashout-web-develop-ip-address
spec:
  location: global
---
# Source: cashout-web/templates/certificate.yaml
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: cashout-web-develop-certificate
spec:
  domains:
    - cashout.dev.sw.sensestar.live

---
# Source: backend-admin/templates/configMap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-admin-config
data:
  default.conf: |-
   server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri /index.html;
    }
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
    location /api/ {
        proxy_pass http://client-api:8080/;
        proxy_set_header X-Real_IP $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr:$remote_port;
        proxy_http_version 1.1;
    }
   }
---
# Source: backend-admin/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: develop
  name: backend-admin
  labels:     
    app: "backend-admin"
    release: "backend-admin"
    heritage: "Helm"
    chart: "backend-admin-0.1.24"
  annotations:
    cloud.google.com/backend-config: '{"ports": {"8080":"backend-admin-backendconfig"}}'
spec:
  selector:
        
    app: "backend-admin"
    release: "backend-admin"
  type: NodePort
  ports:
  - name: backend-admin
    port: 8080
    targetPort: 80
    protocol: TCP
---
# Source: backend-admin/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: develop
  name: backend-admin
  labels:     
    app: "backend-admin"
    release: "backend-admin"
    heritage: "Helm"
    chart: "backend-admin-0.1.24"
spec:
  replicas: 0
  selector:
    matchLabels:       
      app: "backend-admin"
      release: "backend-admin"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:         
        app: "backend-admin"
        release: "backend-admin"
        heritage: "Helm"
        chart: "backend-admin-0.1.24"
    spec:
      containers:
      - name: backend-admin
        image: "gcr.io/sstar-sw-backend-dev/gitlab.com/sstar/sw-backend-admin:v1.2.10-1737"
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 50m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
        volumeMounts:
        - name: backend-admin-config
          mountPath: "/etc/nginx/conf.d/default.conf"
          subPath: default.conf
        env:
        - name: API_HOST
          value: "https://api.dev.sw.sensestar.live"
        - name: PORT
          value: "8080"
        ports:
        - name: backend-admin
          containerPort: 80
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: backend-admin-config
        configMap:
          name: backend-admin-config
          items:
          - key: default.conf
            path: default.conf
---
# Source: backend-admin/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.allow-http: "true"
    kubernetes.io/ingress.class: gce
    kubernetes.io/ingress.global-static-ip-name: backend-admin-develop-ip-address
    networking.gke.io/managed-certificates: backend-admin-develop-certificate
  namespace: develop
  name: backend-admin
  labels:
    app: backend-admin
        
    app: "backend-admin"
    release: "backend-admin"
    heritage: "Helm"
    chart: "backend-admin-0.1.24"
spec:
  rules:
  - http:
      paths:
      - path: /*
        backend:
          serviceName: backend-admin
          servicePort: 8080
---
# Source: backend-admin/templates/backend-config.yaml
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  namespace: "develop"
  name: backend-admin-backendconfig
spec:
  securityPolicy:
    name: "ap-backend-armor-policy"
---
# Source: backend-admin/templates/ip.yaml
apiVersion: compute.cnrm.cloud.google.com/v1beta1
kind: ComputeAddress
metadata:
  name: backend-admin-develop-ip-address
spec:
  location: global
---
# Source: backend-admin/templates/certificate.yaml
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: backend-admin-develop-certificate
spec:
  domains:
    - admin.dev.sw.sensestar.live

